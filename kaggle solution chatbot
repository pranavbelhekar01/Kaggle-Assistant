{"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":50947,"databundleVersionId":5741538,"sourceType":"competition"},{"sourceId":64148,"databundleVersionId":7669720,"sourceType":"competition"},{"sourceId":6140902,"sourceType":"datasetVersion","datasetId":3475059},{"sourceId":8120906,"sourceType":"datasetVersion","datasetId":9},{"sourceId":11372,"sourceType":"modelInstanceVersion","modelInstanceId":5388}],"dockerImageVersionId":30683,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":480.469517,"end_time":"2024-04-13T16:38:25.36428","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-04-13T16:30:24.894763","version":"2.5.0"},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{"00e362ef9c0449a5bf664ffc82cd2099":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_39503e7def4f415da91c8aa27569790a","max":167,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3d0310b79942434c9696c92c479334ea","value":167}},"05571ae21cdf4c6aaf5b624855237374":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0695d7543e614432b6028c35afd6e5e9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_493f88ae5698494a9ee688fbf75eefeb","IPY_MODEL_b3922d1993b14e75b6c27d112543c836","IPY_MODEL_bb4aa5c5785847db883e639e6bed4bcb"],"layout":"IPY_MODEL_a3e47f7beaa043baaa18fcf635e20140"}},"0a6b630ce44148ec80ae664d9ec41677":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b0afb9d5140449839ad67a114ff997d1","placeholder":"​","style":"IPY_MODEL_c183e061fa7642c8872dbd7e8e36d9b6","value":" 443/443 [00:00&lt;00:00, 40.4kB/s]"}},"0b3306cd4da342eea51afb050958c74e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0e8edad2e9464c38a6e06bd4d7693388":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_21b89cd501d94debb0dbc3621bdc9a40","IPY_MODEL_135975a42cdc45919f186112e71c8723","IPY_MODEL_40c54c1a7d904899b23db89caa48fec5"],"layout":"IPY_MODEL_1ca2ea6ed2e7470ab5e47321ead812d7"}},"0fbc68d38422415f80aa47060ffa5d37":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1009dc1eb0d944dc93b38a9e92b04167":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_67c484211f79473cb8471e7435b5d03a","placeholder":"​","style":"IPY_MODEL_724a17a51658405eb6160e519c50b9a0","value":"tokenizer.json: 100%"}},"135975a42cdc45919f186112e71c8723":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_68b7d8b86324425e9b3fa4f504c67bf5","max":5069051,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2013ead100aa4c2c86cddf3f88f90455","value":5069051}},"144b0dfbe3f64f968b106f59bc6f0cb7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9e94ac675b8d463888f9f15206c3364d","placeholder":"​","style":"IPY_MODEL_d9fd4f5488734aedb04c9bb904c38a6a","value":"config.json: 100%"}},"17b1474e49404a998edd473c198c2ad3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_58248c833a694cb4ba0102e10a928eca","placeholder":"​","style":"IPY_MODEL_32ab62bada9f4cb68b9d166c0226e755","value":" 200/200 [00:00&lt;00:00, 17.8kB/s]"}},"1be35d7ca24d4e3886b057d373d9549f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1ca2ea6ed2e7470ab5e47321ead812d7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1fb86162aea44ed885a11c64f2881383":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2013ead100aa4c2c86cddf3f88f90455":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2043309b038049fe8742ce027116ca14":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21b89cd501d94debb0dbc3621bdc9a40":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5e22bde52e984271b28d7ee756504a72","placeholder":"​","style":"IPY_MODEL_f50fa6f088ea44d5a5caaf978ea31b85","value":"sentencepiece.bpe.model: 100%"}},"24eb782af75547c7967ec2c72d9b8482":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dbe33162b2684c3182842f97d3e2e7e6","IPY_MODEL_d289a5c4d2f548b6b530357a0520f7e9","IPY_MODEL_17b1474e49404a998edd473c198c2ad3"],"layout":"IPY_MODEL_700c720cefa140ff91b45198988bdc8c"}},"28ef3078fdec4a1b97ab32e8d910e9fc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2914015f239e40f8a0cdb5f83cf1fa18":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2b415fa974d847e0b2e215c225bbb9fa":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2c029b3283644e32a68e9ab5aedf7fa0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_63631085f3d9477a98f27cd65c0900b9","placeholder":"​","style":"IPY_MODEL_d89b33bea3be4dc2ba15095e9fd8e6fe","value":" 160k/160k [00:00&lt;00:00, 4.36MB/s]"}},"30f04c7acb1b429e9adca86755fdc535":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_440d5d12a3a54bfbb82311c8ae719377","IPY_MODEL_dec3bce1e2c64931b584c73b86093038","IPY_MODEL_5f779b07d1e548009664ee5c1d57425a"],"layout":"IPY_MODEL_2914015f239e40f8a0cdb5f83cf1fa18"}},"319d97429025463bb3e40b5f949bf0ec":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"32ab62bada9f4cb68b9d166c0226e755":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"366c73b43b594724853f4a7ae3a29a7c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"38d1b925b07847ffaa1e84f5fae1df25":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"39503e7def4f415da91c8aa27569790a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3b34e21868094de8843c9f275e33080f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3bce7fe03aca4d54af981345c93a8c1d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d0310b79942434c9696c92c479334ea":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"40c54c1a7d904899b23db89caa48fec5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3bce7fe03aca4d54af981345c93a8c1d","placeholder":"​","style":"IPY_MODEL_81613e844b204a1488607e839cce69eb","value":" 5.07M/5.07M [00:00&lt;00:00, 156MB/s]"}},"440d5d12a3a54bfbb82311c8ae719377":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_53c939bad2ea4a239164cc90d059e254","placeholder":"​","style":"IPY_MODEL_e3ae4767d1794f32ba6d1c44d09707fd","value":"sentence_bert_config.json: 100%"}},"44d0cee7472b49c9988bbc53d884a373":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8b23cf2c8b4b41df9dc64b6cd57a3c13","max":655,"min":0,"orientation":"horizontal","style":"IPY_MODEL_319d97429025463bb3e40b5f949bf0ec","value":655}},"454e0539164641c88bc3c061128fc409":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_38d1b925b07847ffaa1e84f5fae1df25","placeholder":"​","style":"IPY_MODEL_c551712e479b4d61b8b555eb81831360","value":" 471M/471M [00:02&lt;00:00, 214MB/s]"}},"493f88ae5698494a9ee688fbf75eefeb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6474f83f0f3c4e17aef18206e9948e3e","placeholder":"​","style":"IPY_MODEL_7b605afd01d34009a7a6e9f21d9938fd","value":"modules.json: 100%"}},"4ac843e8693645cdbad1885b82ff8287":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a734f17e2e1e4c049cd5bf919048c733","placeholder":"​","style":"IPY_MODEL_0fbc68d38422415f80aa47060ffa5d37","value":"README.md: 100%"}},"4d5816275bb942fdbf5be95e6df5a09b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4fa81c82737f4907b1b8e8a3fc60ccad":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2043309b038049fe8742ce027116ca14","placeholder":"​","style":"IPY_MODEL_2b415fa974d847e0b2e215c225bbb9fa","value":" 167/167 [00:00&lt;00:00, 15.3kB/s]"}},"50bdaaa9c92340c69cff93a3dfb9ff3c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"529d5656220f48e99469744e280d8fd7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d62d6fb1ed0e400994a35eec38478642","max":160291,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6cc116d2826c4d9d9e1d7d0215528a92","value":160291}},"53c939bad2ea4a239164cc90d059e254":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"56bf283b416542f6b0bbb4e0bb24b7e0":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"58248c833a694cb4ba0102e10a928eca":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59457b481e8a40c89ac522e7c5110b98":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_76a54846ef544d3abe9d2c991b490905","IPY_MODEL_72c81c62e4b54638ac9792c4eb7fb002","IPY_MODEL_0a6b630ce44148ec80ae664d9ec41677"],"layout":"IPY_MODEL_3b34e21868094de8843c9f275e33080f"}},"5a2aa606b2454d5c888a760ab7470b61":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5c898d2d4ae04ca09e00db6a3069f770":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e22bde52e984271b28d7ee756504a72":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e7ecedf6c534d04be97c9e62678ffec":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_72817c0e19a04b58957279f3c5f39a90","placeholder":"​","style":"IPY_MODEL_50bdaaa9c92340c69cff93a3dfb9ff3c","value":" 655/655 [00:00&lt;00:00, 64.2kB/s]"}},"5ed2d7054b2c4437a88aeab594cf09ce":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_79eab3b1f1eb4b43b11d05d31957f1a1","IPY_MODEL_b67a01a1656744209424a0ae48ef792b","IPY_MODEL_454e0539164641c88bc3c061128fc409"],"layout":"IPY_MODEL_56bf283b416542f6b0bbb4e0bb24b7e0"}},"5f779b07d1e548009664ee5c1d57425a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_83a369bfbe9c496c8f991d083f6bbecf","placeholder":"​","style":"IPY_MODEL_ea39469421cd44ef9a8bb5547be754c0","value":" 57.0/57.0 [00:00&lt;00:00, 4.22kB/s]"}},"5f89a3b6f6dd4d9aa231c94397c4905f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63631085f3d9477a98f27cd65c0900b9":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6474f83f0f3c4e17aef18206e9948e3e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6525700ed09849dd928076de69e02535":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"67c484211f79473cb8471e7435b5d03a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"685ab704d6de4340ab637c7ac3b1279d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_1009dc1eb0d944dc93b38a9e92b04167","IPY_MODEL_c56e7289f94547d3912240556802a8bf","IPY_MODEL_7ae8ce47f0b04fbeacf5f10da1b985a9"],"layout":"IPY_MODEL_4d5816275bb942fdbf5be95e6df5a09b"}},"68b7d8b86324425e9b3fa4f504c67bf5":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6cc116d2826c4d9d9e1d7d0215528a92":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"700c720cefa140ff91b45198988bdc8c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"724a17a51658405eb6160e519c50b9a0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"72817c0e19a04b58957279f3c5f39a90":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"72c81c62e4b54638ac9792c4eb7fb002":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c42a23c17d9745b69466c2d8567504d8","max":443,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0b3306cd4da342eea51afb050958c74e","value":443}},"76a54846ef544d3abe9d2c991b490905":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d750a25d33ad4061a64a904883a9f758","placeholder":"​","style":"IPY_MODEL_8de0b2df2512469d8613b6247c2e94b2","value":"tokenizer_config.json: 100%"}},"79eab3b1f1eb4b43b11d05d31957f1a1":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cbca6a845e5b42f0b5856dd08d1c3cec","placeholder":"​","style":"IPY_MODEL_b0aa704e9ca3439b910d0f1381803dc5","value":"model.safetensors: 100%"}},"7ae8ce47f0b04fbeacf5f10da1b985a9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_83e5351b52d242f3b3983d9a6e48b61f","placeholder":"​","style":"IPY_MODEL_05571ae21cdf4c6aaf5b624855237374","value":" 17.1M/17.1M [00:00&lt;00:00, 195MB/s]"}},"7b605afd01d34009a7a6e9f21d9938fd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"81613e844b204a1488607e839cce69eb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"83781de241244229b3ea1ea0dc6fd283":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"83a369bfbe9c496c8f991d083f6bbecf":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"83e5351b52d242f3b3983d9a6e48b61f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8b23cf2c8b4b41df9dc64b6cd57a3c13":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8de0b2df2512469d8613b6247c2e94b2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"98d44535e06f4a318cfafca14a275a3f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9e94ac675b8d463888f9f15206c3364d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ed5d270f1a1483bbdb97c33674a7dd1":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4ac843e8693645cdbad1885b82ff8287","IPY_MODEL_529d5656220f48e99469744e280d8fd7","IPY_MODEL_2c029b3283644e32a68e9ab5aedf7fa0"],"layout":"IPY_MODEL_83781de241244229b3ea1ea0dc6fd283"}},"a1056056bfa649158289cfdd6758e2f6":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a3e47f7beaa043baaa18fcf635e20140":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a734f17e2e1e4c049cd5bf919048c733":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b02bad3bb2e74b0488d621d1cd6b23fd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_144b0dfbe3f64f968b106f59bc6f0cb7","IPY_MODEL_44d0cee7472b49c9988bbc53d884a373","IPY_MODEL_5e7ecedf6c534d04be97c9e62678ffec"],"layout":"IPY_MODEL_98d44535e06f4a318cfafca14a275a3f"}},"b0aa704e9ca3439b910d0f1381803dc5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b0afb9d5140449839ad67a114ff997d1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b3922d1993b14e75b6c27d112543c836":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a1056056bfa649158289cfdd6758e2f6","max":387,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6525700ed09849dd928076de69e02535","value":387}},"b4f1f1d03cea4c15ade81570c6ce1da1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b627afbb8c0043d4b34ceeb8c8a72538":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b67a01a1656744209424a0ae48ef792b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b4f1f1d03cea4c15ade81570c6ce1da1","max":470641600,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1fb86162aea44ed885a11c64f2881383","value":470641600}},"b7150685243742dc9ed23cd2cf93291a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bb4aa5c5785847db883e639e6bed4bcb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5c898d2d4ae04ca09e00db6a3069f770","placeholder":"​","style":"IPY_MODEL_28ef3078fdec4a1b97ab32e8d910e9fc","value":" 387/387 [00:00&lt;00:00, 31.7kB/s]"}},"c183e061fa7642c8872dbd7e8e36d9b6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c42a23c17d9745b69466c2d8567504d8":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c551712e479b4d61b8b555eb81831360":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c56e7289f94547d3912240556802a8bf":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b7150685243742dc9ed23cd2cf93291a","max":17082730,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1be35d7ca24d4e3886b057d373d9549f","value":17082730}},"c596614299d84ff88e0bc5f75d035869":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca282b47c4324838a37335e321d3a877":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca8c7b80008a4ef8a8aea19ea45fd349":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c596614299d84ff88e0bc5f75d035869","placeholder":"​","style":"IPY_MODEL_366c73b43b594724853f4a7ae3a29a7c","value":"special_tokens_map.json: 100%"}},"cbca6a845e5b42f0b5856dd08d1c3cec":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d289a5c4d2f548b6b530357a0520f7e9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eee1a5b071ee47a197a35a7131f6d6a3","max":200,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5a2aa606b2454d5c888a760ab7470b61","value":200}},"d40b247d6b4c48fe8d0ccb7ef5905661":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ca8c7b80008a4ef8a8aea19ea45fd349","IPY_MODEL_00e362ef9c0449a5bf664ffc82cd2099","IPY_MODEL_4fa81c82737f4907b1b8e8a3fc60ccad"],"layout":"IPY_MODEL_ca282b47c4324838a37335e321d3a877"}},"d62d6fb1ed0e400994a35eec38478642":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d750a25d33ad4061a64a904883a9f758":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d89b33bea3be4dc2ba15095e9fd8e6fe":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d9fd4f5488734aedb04c9bb904c38a6a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dbe33162b2684c3182842f97d3e2e7e6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f89a3b6f6dd4d9aa231c94397c4905f","placeholder":"​","style":"IPY_MODEL_f7f05a4568b345d6baf02cc959db43f3","value":"1_Pooling/config.json: 100%"}},"dec3bce1e2c64931b584c73b86093038":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f54fb3bbecbc4a95b4eb5f125abfb8c0","max":57,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b627afbb8c0043d4b34ceeb8c8a72538","value":57}},"e3ae4767d1794f32ba6d1c44d09707fd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ea39469421cd44ef9a8bb5547be754c0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eee1a5b071ee47a197a35a7131f6d6a3":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f50fa6f088ea44d5a5caaf978ea31b85":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f54fb3bbecbc4a95b4eb5f125abfb8c0":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f7f05a4568b345d6baf02cc959db43f3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}},"version_major":2,"version_minor":0}}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"\n# Hushh.ai\n\nIn this notebook, Gemma 2B is combined with LangChain to condense Kaggle solution write-ups via prompt engineering and retrieval-augmented generation (RAG). As Gemma is not initally supported by LangChain, the Gemma 2B is wrapped as a custom model within LangChain.\n\n### Datasets\n1. [Kaggle solutions](https://farid.one/kaggle-solutions/), \n2. [2023 Kaggle writeup report](https://www.kaggle.com/competitions/2023-kaggle-ai-report) and \n3. [Kaggle metadata](https://www.kaggle.com/datasets/kaggle/meta-kaggle/discussion/59870). \n\nAs a result, the dataset consists of an abundance of information from Kaggle write-ups including competition names, team names, teams places and scores of teams in a competition. \n\nThe process of summarizing, explaining, or teaching Kaggle competition solution write-ups leverages Langchain's conversational retrieval chain. To increase the performance of the retrieval system, document data was vectorized using the [multilingual-e5 model](https://huggingface.co/intfloat/multilingual-e5-small)  and stored in [FAISS](https://github.com/facebookresearch/faiss). In addition to retrieving information from an external database, the conversational retrieval chain empowers the language model to address users' inquiries not only based on provided contexts or information but also on previous conversation. This capability enables the model to handle both new questions and follow-up questions in a conversational manner. Moreover, several improvement mechanisms have been incorporated to augment the functionality of the original conversational retrieval chain, thereby providing a superior question-and-answer experience with the language model.\n\nIn the end, a simple, interactive interface(chatbot) was built to test the quality of the language model's outputs in terms of helpfulness, response quality, and its ability to handle new or follow-up questions. The results of the test and suggestions for further improvement are presented in the conclusion section.","metadata":{"papermill":{"duration":0.022151,"end_time":"2024-04-13T16:30:27.730638","exception":false,"start_time":"2024-04-13T16:30:27.708487","status":"completed"},"tags":[]}},{"cell_type":"markdown","source":"# 2. Prerequisites \n\nInstalling necessary packages. ","metadata":{"papermill":{"duration":0.021102,"end_time":"2024-04-13T16:30:27.773162","exception":false,"start_time":"2024-04-13T16:30:27.75206","status":"completed"},"tags":[]}},{"cell_type":"code","source":"!pip install -q -U langchain \n!pip install -q -U keras-nlp \n!pip install -q -U keras>3 \n!pip install langchain accelerate bitsandbytes sentence_transformers --quiet \n!pip install faiss-gpu --quiet ","metadata":{"papermill":{"duration":82.832233,"end_time":"2024-04-13T16:31:50.627722","exception":false,"start_time":"2024-04-13T16:30:27.795489","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T03:58:32.881982Z","iopub.execute_input":"2024-04-15T03:58:32.882263Z","iopub.status.idle":"2024-04-15T03:59:52.844158Z","shell.execute_reply.started":"2024-04-15T03:58:32.882238Z","shell.execute_reply":"2024-04-15T03:59:52.843123Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ncudf 23.8.0 requires cubinlinker, which is not installed.\ncudf 23.8.0 requires cupy-cuda11x>=12.0.0, which is not installed.\ncudf 23.8.0 requires ptxcompiler, which is not installed.\ncuml 23.8.0 requires cupy-cuda11x>=12.0.0, which is not installed.\ndask-cudf 23.8.0 requires cupy-cuda11x>=12.0.0, which is not installed.\nkeras-cv 0.8.2 requires keras-core, which is not installed.\nkeras-nlp 0.8.2 requires keras-core, which is not installed.\ntensorflow-decision-forests 1.8.1 requires wurlitzer, which is not installed.\napache-beam 2.46.0 requires dill<0.3.2,>=0.3.1.1, but you have dill 0.3.8 which is incompatible.\napache-beam 2.46.0 requires numpy<1.25.0,>=1.14.3, but you have numpy 1.26.4 which is incompatible.\napache-beam 2.46.0 requires pyarrow<10.0.0,>=3.0.0, but you have pyarrow 15.0.2 which is incompatible.\ncudf 23.8.0 requires cuda-python<12.0a0,>=11.7.1, but you have cuda-python 12.4.0 which is incompatible.\ncudf 23.8.0 requires pandas<1.6.0dev0,>=1.3, but you have pandas 2.1.4 which is incompatible.\ncudf 23.8.0 requires protobuf<5,>=4.21, but you have protobuf 3.20.3 which is incompatible.\ncudf 23.8.0 requires pyarrow==11.*, but you have pyarrow 15.0.2 which is incompatible.\ncuml 23.8.0 requires dask==2023.7.1, but you have dask 2024.4.0 which is incompatible.\ndask-cuda 23.8.0 requires dask==2023.7.1, but you have dask 2024.4.0 which is incompatible.\ndask-cuda 23.8.0 requires pandas<1.6.0dev0,>=1.3, but you have pandas 2.1.4 which is incompatible.\ndask-cudf 23.8.0 requires dask==2023.7.1, but you have dask 2024.4.0 which is incompatible.\ndask-cudf 23.8.0 requires pandas<1.6.0dev0,>=1.3, but you have pandas 2.1.4 which is incompatible.\ndistributed 2023.7.1 requires dask==2023.7.1, but you have dask 2024.4.0 which is incompatible.\ngoogle-cloud-bigquery 2.34.4 requires packaging<22.0dev,>=14.3, but you have packaging 23.2 which is incompatible.\njupyterlab 4.1.5 requires jupyter-lsp>=2.0.0, but you have jupyter-lsp 1.5.1 which is incompatible.\njupyterlab-lsp 5.1.0 requires jupyter-lsp>=2.0.0, but you have jupyter-lsp 1.5.1 which is incompatible.\nlibpysal 4.9.2 requires shapely>=2.0.1, but you have shapely 1.8.5.post1 which is incompatible.\nmomepy 0.7.0 requires shapely>=2, but you have shapely 1.8.5.post1 which is incompatible.\nosmnx 1.9.2 requires shapely>=2.0, but you have shapely 1.8.5.post1 which is incompatible.\nraft-dask 23.8.0 requires dask==2023.7.1, but you have dask 2024.4.0 which is incompatible.\nspopt 0.6.0 requires shapely>=2.0.1, but you have shapely 1.8.5.post1 which is incompatible.\ntensorflow 2.15.0 requires keras<2.16,>=2.15.0, but you have keras 3.1.1 which is incompatible.\nydata-profiling 4.6.4 requires numpy<1.26,>=1.16.0, but you have numpy 1.26.4 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0m\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ntensorflow-decision-forests 1.8.1 requires wurlitzer, which is not installed.\u001b[0m\u001b[31m\n\u001b[0m\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ntensorflow-decision-forests 1.8.1 requires wurlitzer, which is not installed.\ntensorflow 2.15.0 requires keras<2.16,>=2.15.0, but you have keras 3.2.1 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}]},{"cell_type":"markdown","source":"## 2.1 Prepare Gemma Model","metadata":{"papermill":{"duration":0.021371,"end_time":"2024-04-13T16:31:50.670879","exception":false,"start_time":"2024-04-13T16:31:50.649508","status":"completed"},"tags":[]}},{"cell_type":"code","source":"# Import Gemma_2b\nimport os\nos.environ[\"KERAS_BACKEND\"] = \"jax\" \nos.environ[\"XLA_PYTHON_CLIENT_MEM_FRACTION\"]=\"1.00\"\nimport keras\nimport keras_nlp\ngemma_lm = keras_nlp.models.GemmaCausalLM.from_preset(\"gemma_instruct_2b_en\")","metadata":{"papermill":{"duration":69.493249,"end_time":"2024-04-13T16:33:00.185849","exception":false,"start_time":"2024-04-13T16:31:50.6926","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T03:59:52.846374Z","iopub.execute_input":"2024-04-15T03:59:52.846695Z","iopub.status.idle":"2024-04-15T04:01:05.621418Z","shell.execute_reply.started":"2024-04-15T03:59:52.846665Z","shell.execute_reply":"2024-04-15T04:01:05.620611Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"2024-04-15 03:59:57.176777: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-15 03:59:57.176870: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-15 03:59:57.311247: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\nAttaching 'config.json' from model 'keras/gemma/keras/gemma_instruct_2b_en/2' to your Kaggle notebook...\nAttaching 'config.json' from model 'keras/gemma/keras/gemma_instruct_2b_en/2' to your Kaggle notebook...\nAttaching 'model.weights.h5' from model 'keras/gemma/keras/gemma_instruct_2b_en/2' to your Kaggle notebook...\nAttaching 'tokenizer.json' from model 'keras/gemma/keras/gemma_instruct_2b_en/2' to your Kaggle notebook...\nAttaching 'assets/tokenizer/vocabulary.spm' from model 'keras/gemma/keras/gemma_instruct_2b_en/2' to your Kaggle notebook...\nnormalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.\n","output_type":"stream"}]},{"cell_type":"code","source":"# Test run \nprint(gemma_lm.generate(\"What is the difference between data science, machine learning, and artificial intelligence?\", max_length=512))","metadata":{"papermill":{"duration":20.969559,"end_time":"2024-04-13T16:33:21.178552","exception":false,"start_time":"2024-04-13T16:33:00.208993","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:05.622503Z","iopub.execute_input":"2024-04-15T04:01:05.623346Z","iopub.status.idle":"2024-04-15T04:01:26.098153Z","shell.execute_reply.started":"2024-04-15T04:01:05.623316Z","shell.execute_reply":"2024-04-15T04:01:26.097172Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"What is the difference between data science, machine learning, and artificial intelligence?\n\n**Data Science**\n\n* Focuses on collecting, cleaning, and analyzing data to extract meaningful insights.\n* Requires skills in statistics, data wrangling, and programming.\n* Aims to uncover patterns, trends, and relationships in data.\n* Often involves exploratory data analysis (EDA) and data visualization.\n\n**Machine Learning**\n\n* A subfield of data science that focuses on developing algorithms that can learn from data without explicit programming.\n* Algorithms learn patterns and relationships from data through supervised, unsupervised, or reinforcement learning techniques.\n* Examples include linear regression, decision trees, and neural networks.\n* Machine learning models can be used for prediction, classification, and clustering.\n\n**Artificial Intelligence**\n\n* A broader field that encompasses both data science and machine learning.\n* AI systems exhibit human-like intelligence, including learning, reasoning, and problem-solving abilities.\n* AI encompasses various technologies, including machine learning, natural language processing, and computer vision.\n* AI systems can be used for various applications, such as healthcare, finance, and transportation.\n\n**Key Differences:**\n\n| Feature | Data Science | Machine Learning | Artificial Intelligence |\n|---|---|---|---|\n| Focus | Data collection and analysis | Data learning from data | Intelligence and problem-solving |\n| Skills | Statistics, data wrangling, programming | Algorithm development | Machine learning algorithms |\n| Applications | Insights from data, exploratory analysis | Prediction, classification, clustering | Human-like intelligence |\n\n**In summary:**\n\n* Data science focuses on collecting, cleaning, and analyzing data to uncover insights.\n* Machine learning focuses on developing algorithms that can learn from data.\n* Artificial intelligence encompasses both data science and machine learning and exhibits human-like intelligence.\n","output_type":"stream"}]},{"cell_type":"code","source":"print(gemma_lm.generate(\"What is the purpose of using loops in programming, and can you give an example of when you might use a for loop versus a while loop?\", max_length=512))","metadata":{"papermill":{"duration":8.476537,"end_time":"2024-04-13T16:33:29.681842","exception":false,"start_time":"2024-04-13T16:33:21.205305","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:26.101101Z","iopub.execute_input":"2024-04-15T04:01:26.101457Z","iopub.status.idle":"2024-04-15T04:01:34.554978Z","shell.execute_reply.started":"2024-04-15T04:01:26.101431Z","shell.execute_reply":"2024-04-15T04:01:34.554014Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"What is the purpose of using loops in programming, and can you give an example of when you might use a for loop versus a while loop?\n\n**Purpose of Loops:**\n\n* **Repetition:** Loops allow you to repeat a block of code multiple times, executing the same set of instructions each time.\n* **Data manipulation:** You can use loops to iterate through a collection of data, performing operations on each element.\n* **Conditional execution:** You can use loops to execute different code blocks based on specific conditions.\n* **Code organization:** Loops can help you organize your code by grouping related operations together.\n\n**For Loop Example:**\n\n```python\nfor i in range(5):\n    print(i)\n```\n\n**While Loop Example:**\n\n```python\ni = 0\nwhile i < 5:\n    print(i)\n    i += 1\n```\n\n**Comparison:**\n\n| Feature | For Loop | While Loop |\n|---|---|---|\n| Control variable | `i` | `i` |\n| Execution order | Top to bottom | Bottom to top |\n| Code organization | More complex | Less complex |\n| Suitable for | Iterating over a sequence of data | Iterating over a sequence of data with a condition |\n\n**When to Use a For Loop:**\n\n* When you need to repeat a block of code multiple times.\n* When you need to manipulate data.\n* When you need to execute different code blocks based on specific conditions.\n\n**When to Use a While Loop:**\n\n* When you need to iterate over a sequence of data with a condition.\n* When you need to perform operations on each element in the sequence.\n* When you need a simple and efficient way to iterate through a sequence.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"*Given that the model was trained on a total of 6 trillion tokens, incorporating data from web documents, code, and mathematics, it appears to be equipped with sufficiently robust functionality to answer questions related to data science and related concepts.*","metadata":{"papermill":{"duration":0.021765,"end_time":"2024-04-13T16:33:40.05963","exception":false,"start_time":"2024-04-13T16:33:40.037865","status":"completed"},"tags":[]}},{"cell_type":"markdown","source":"## 2.2 Define Gemma as Custom Model for LangChain\n\nCreate a custom LLM wrapper to use Gemma as LLM.","metadata":{"papermill":{"duration":0.022032,"end_time":"2024-04-13T16:33:40.103829","exception":false,"start_time":"2024-04-13T16:33:40.081797","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from typing import Any, Optional, List, Mapping\nfrom langchain_core.callbacks.manager import CallbackManagerForLLMRun\nfrom langchain_core.language_models.llms import LLM\n\nclass GemmaLC(LLM):\n    model: Any = None\n    n: int = None\n    def __init__(self, keras_model, n):\n        super(GemmaLC, self).__init__()\n        self.model = keras_model\n        self.n = n\n\n    @property\n    def _llm_type(self) -> str:\n        return \"Gemma\"\n    def _call(self, prompt: str, stop: Optional[List[str]] = None, **kwargs) -> str:\n        #system_prompt=\"\"\"You are a expert of listing, summarizing, explaining, and teaching concepts used in Kaggle writeups. You can provide not only answer to an question, but explanations or examples of how to apply an concept or its significance in the contexts of a project.\\n\\n\"\"\"\n        generated = self.model.generate(prompt, max_length=self.n)\n        split_string = generated.split(\"SUMMARY:\", 1)\n        if len(split_string) > 1:            \n            return split_string[1].lstrip('\\n')\n        else:\n            return generated.lstrip('\\n')\n    @property\n    def _identifying_params(self) -> Mapping[str, Any]:\n        \"\"\"Get the identifying parameters.\"\"\"\n        return {\"n\": self.n}","metadata":{"papermill":{"duration":0.356117,"end_time":"2024-04-13T16:33:40.481973","exception":false,"start_time":"2024-04-13T16:33:40.125856","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:34.556145Z","iopub.execute_input":"2024-04-15T04:01:34.556449Z","iopub.status.idle":"2024-04-15T04:01:34.903314Z","shell.execute_reply.started":"2024-04-15T04:01:34.556423Z","shell.execute_reply":"2024-04-15T04:01:34.902395Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# 3. Dataset\n\nAs the retrieval will be based on the content of each writeup, index-like information, such as competition name, in the document can be significantly helpful in terms of the retrieval of accurate documents. \n\nPublic data sources used here are: \n - (1) [Kaggle solutions](https://farid.one/kaggle-solutions/), \n - (2) [2023 Kaggle writeup report](https://www.kaggle.com/competitions/2023-kaggle-ai-report)\n - (3) [kaggle metadata](https://www.kaggle.com/datasets/kaggle/meta-kaggle/discussion/59870). ","metadata":{"papermill":{"duration":0.021892,"end_time":"2024-04-13T16:33:40.526353","exception":false,"start_time":"2024-04-13T16:33:40.504461","status":"completed"},"tags":[]}},{"cell_type":"markdown","source":"## 3.1 Scraping \n\n*Scraping competition data from [kaggle solutions](https://farid.one/kaggle-solutions/).* ","metadata":{"papermill":{"duration":0.023256,"end_time":"2024-04-13T16:33:40.572034","exception":false,"start_time":"2024-04-13T16:33:40.548778","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from bs4 import BeautifulSoup\nimport requests\nurl = \"https://farid.one/kaggle-solutions/\"\nresponse = requests.get(url)\nhtml = response.text\nsoup = BeautifulSoup(html, 'html.parser')\nlinks = []\nfor li_tag in soup.find_all('li', class_='secondary'):\n    link = li_tag.find('a')\n    if link is None:\n        continue\n    if 'discussion' in link['href']:\n        medal_img = li_tag.find('img')\n        if medal_img is None:\n            continue\n        if medal_img.next_sibling is not None:\n            place = medal_img.next_sibling.strip().split(' ')[0]\n        else:\n            place = list(li_tag.find('img').children)[0].strip().split(' ')[0]\n        competition_name = li_tag.find_previous('b').text.split('. ')[-1].strip()\n        info_tuple = (link['href'], int(place[:-2]), place, competition_name)\n        links.append(info_tuple)","metadata":{"papermill":{"duration":2.662534,"end_time":"2024-04-13T16:33:43.256592","exception":false,"start_time":"2024-04-13T16:33:40.594058","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:34.904590Z","iopub.execute_input":"2024-04-15T04:01:34.905257Z","iopub.status.idle":"2024-04-15T04:01:37.466824Z","shell.execute_reply.started":"2024-04-15T04:01:34.905223Z","shell.execute_reply":"2024-04-15T04:01:37.466019Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nscraped = pd.DataFrame(data=links, columns=['link', 'place', 'place_order', 'competition_name'])\nscraped.head()","metadata":{"papermill":{"duration":0.046227,"end_time":"2024-04-13T16:33:43.32537","exception":false,"start_time":"2024-04-13T16:33:43.279143","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:37.468030Z","iopub.execute_input":"2024-04-15T04:01:37.468823Z","iopub.status.idle":"2024-04-15T04:01:37.490326Z","shell.execute_reply.started":"2024-04-15T04:01:37.468787Z","shell.execute_reply":"2024-04-15T04:01:37.489303Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"                                                link  place place_order  \\\n0  https://www.kaggle.com/competitions/playground...      2         2nd   \n1  https://www.kaggle.com/competitions/playground...      3         3rd   \n2  https://www.kaggle.com/competitions/optiver-tr...      1         1st   \n3  https://www.kaggle.com/competitions/optiver-tr...      9         9th   \n4  https://www.kaggle.com/competitions/optiver-tr...     14        14th   \n\n                          competition_name  \n0  Playground Series - Season 4, Episode 3  \n1  Playground Series - Season 4, Episode 3  \n2           Optiver - Trading at the Close  \n3           Optiver - Trading at the Close  \n4           Optiver - Trading at the Close  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>link</th>\n      <th>place</th>\n      <th>place_order</th>\n      <th>competition_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>https://www.kaggle.com/competitions/playground...</td>\n      <td>2</td>\n      <td>2nd</td>\n      <td>Playground Series - Season 4, Episode 3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>https://www.kaggle.com/competitions/playground...</td>\n      <td>3</td>\n      <td>3rd</td>\n      <td>Playground Series - Season 4, Episode 3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>https://www.kaggle.com/competitions/optiver-tr...</td>\n      <td>1</td>\n      <td>1st</td>\n      <td>Optiver - Trading at the Close</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>https://www.kaggle.com/competitions/optiver-tr...</td>\n      <td>9</td>\n      <td>9th</td>\n      <td>Optiver - Trading at the Close</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>https://www.kaggle.com/competitions/optiver-tr...</td>\n      <td>14</td>\n      <td>14th</td>\n      <td>Optiver - Trading at the Close</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 3.2 Combining Kaggle Writeup Report Data\nCombining competition data with\n- [2023 Kaggle writeup report](https://www.kaggle.com/competitions/2023-kaggle-ai-report) \n- [kaggle metadata](https://www.kaggle.com/datasets/kaggle/meta-kaggle/discussion/59870). ","metadata":{"papermill":{"duration":0.022101,"end_time":"2024-04-13T16:33:43.370601","exception":false,"start_time":"2024-04-13T16:33:43.3485","status":"completed"},"tags":[]}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\ndf = pd.read_csv('../input/2023-kaggle-ai-report/kaggle_writeups_20230510.csv')\nscraped['nm'] = scraped.link.apply(lambda x: x.split('/')[-1])\ndf['nm'] = df['Writeup URL'].apply(lambda x: x.split('/')[-1])\nwriteup_mapping = dict(zip(df.nm, df['Writeup']))\nscraped['writeup'] = scraped.nm.apply(lambda x: writeup_mapping[x] if x in writeup_mapping else np.nan)\nwriteups = scraped.dropna()\nwriteups.head()","metadata":{"papermill":{"duration":0.384202,"end_time":"2024-04-13T16:33:43.77699","exception":false,"start_time":"2024-04-13T16:33:43.392788","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:37.491669Z","iopub.execute_input":"2024-04-15T04:01:37.492118Z","iopub.status.idle":"2024-04-15T04:01:37.835931Z","shell.execute_reply.started":"2024-04-15T04:01:37.492084Z","shell.execute_reply":"2024-04-15T04:01:37.834937Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"                                                  link  place place_order  \\\n482  https://www.kaggle.com/c/asl-signs/discussion/...      1         1st   \n483  https://www.kaggle.com/c/asl-signs/discussion/...      2         2nd   \n484  https://www.kaggle.com/c/asl-signs/discussion/...      3         3rd   \n485  https://www.kaggle.com/c/asl-signs/discussion/...      4         4th   \n486  https://www.kaggle.com/c/asl-signs/discussion/...      5         5th   \n\n                                competition_name      nm  \\\n482  Google - Isolated Sign Language Recognition  406684   \n483  Google - Isolated Sign Language Recognition  406306   \n484  Google - Isolated Sign Language Recognition  406568   \n485  Google - Isolated Sign Language Recognition  406673   \n486  Google - Isolated Sign Language Recognition  406491   \n\n                                               writeup  \n482  <p>First of all, I would like to express my gr...  \n483  <h2>TLDR</h2>\\n<p>We used an approach similar ...  \n484  <p>We used an <strong>ensemble of six conv1d m...  \n485  <p>I would like to thank the organizers and al...  \n486  <p>Here is a quick overview of the 5th-place s...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>link</th>\n      <th>place</th>\n      <th>place_order</th>\n      <th>competition_name</th>\n      <th>nm</th>\n      <th>writeup</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>482</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>1</td>\n      <td>1st</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406684</td>\n      <td>&lt;p&gt;First of all, I would like to express my gr...</td>\n    </tr>\n    <tr>\n      <th>483</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>2</td>\n      <td>2nd</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406306</td>\n      <td>&lt;h2&gt;TLDR&lt;/h2&gt;\\n&lt;p&gt;We used an approach similar ...</td>\n    </tr>\n    <tr>\n      <th>484</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>3</td>\n      <td>3rd</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406568</td>\n      <td>&lt;p&gt;We used an &lt;strong&gt;ensemble of six conv1d m...</td>\n    </tr>\n    <tr>\n      <th>485</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>4</td>\n      <td>4th</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406673</td>\n      <td>&lt;p&gt;I would like to thank the organizers and al...</td>\n    </tr>\n    <tr>\n      <th>486</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>5</td>\n      <td>5th</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406491</td>\n      <td>&lt;p&gt;Here is a quick overview of the 5th-place s...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"teams = pd.read_csv('../input/meta-kaggle/Teams.csv')\nteams = teams.dropna(axis=0, subset=['PrivateLeaderboardRank'])\nint_columns = ['TeamLeaderId', 'PrivateLeaderboardSubmissionId', 'PrivateLeaderboardRank']\nteams[int_columns] = teams[int_columns].astype(int)\nteams = teams.loc[:, ['Id', 'CompetitionId', 'TeamName'] + int_columns]\nusers = pd.read_csv('../input/meta-kaggle/Users.csv')\nusers = users.loc[:, ['Id', 'UserName', 'DisplayName']]\nusers.columns = ['UserId', 'UserName', 'DisplayName']\ncompetitions = pd.read_csv('../input/meta-kaggle/Competitions.csv')\ncompetitions = competitions[['Id', 'Title']]\ncompetitions.columns = ['CompetitionId', 'competition_name']\nsubmissions = pd.read_csv('../input/meta-kaggle/Submissions.csv')\nsubmissions = submissions[['Id', 'PublicScoreLeaderboardDisplay', 'PrivateScoreLeaderboardDisplay']]\nsubmissions.columns = ['PrivateLeaderboardSubmissionId', 'PublicScoreLeaderboardDisplay', 'PrivateScoreLeaderboardDisplay']\nteams = pd.merge(teams, competitions, how='left', on='CompetitionId')\nteams = pd.merge(teams, users, how='left', left_on='TeamLeaderId', right_on='UserId')\nteams = pd.merge(teams, submissions, how='left', on='PrivateLeaderboardSubmissionId')\nteams.head()","metadata":{"papermill":{"duration":101.763668,"end_time":"2024-04-13T16:35:25.564786","exception":false,"start_time":"2024-04-13T16:33:43.801118","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:01:37.837071Z","iopub.execute_input":"2024-04-15T04:01:37.837434Z","iopub.status.idle":"2024-04-15T04:03:18.210544Z","shell.execute_reply.started":"2024-04-15T04:01:37.837405Z","shell.execute_reply":"2024-04-15T04:03:18.209531Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"    Id  CompetitionId      TeamName  TeamLeaderId  \\\n0  496           2435         team1           647   \n1  497           2435          jonp           619   \n2  499           2435         Bwaas           663   \n3  500           2435    Thylacoleo           673   \n4  501           2435  pjonesdotcda           435   \n\n   PrivateLeaderboardSubmissionId  PrivateLeaderboardRank  \\\n0                            2192                      83   \n1                            2182                      25   \n2                            2184                     100   \n3                            2187                      23   \n4                            2191                      80   \n\n          competition_name  UserId        UserName      DisplayName  \\\n0  Predict HIV Progression   647.0  bradpennington  Brad Pennington   \n1  Predict HIV Progression     NaN             NaN              NaN   \n2  Predict HIV Progression   663.0        bwaas663            Bwaas   \n3  Predict HIV Progression   673.0      brucetabor      Bruce Tabor   \n4  Predict HIV Progression     NaN             NaN              NaN   \n\n   PublicScoreLeaderboardDisplay  PrivateScoreLeaderboardDisplay  \n0                       57.21149                        56.35839  \n1                       61.05770                        65.60690  \n2                       47.11539                        50.00000  \n3                       62.50000                        65.75140  \n4                       55.28850                        56.50289  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>CompetitionId</th>\n      <th>TeamName</th>\n      <th>TeamLeaderId</th>\n      <th>PrivateLeaderboardSubmissionId</th>\n      <th>PrivateLeaderboardRank</th>\n      <th>competition_name</th>\n      <th>UserId</th>\n      <th>UserName</th>\n      <th>DisplayName</th>\n      <th>PublicScoreLeaderboardDisplay</th>\n      <th>PrivateScoreLeaderboardDisplay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>496</td>\n      <td>2435</td>\n      <td>team1</td>\n      <td>647</td>\n      <td>2192</td>\n      <td>83</td>\n      <td>Predict HIV Progression</td>\n      <td>647.0</td>\n      <td>bradpennington</td>\n      <td>Brad Pennington</td>\n      <td>57.21149</td>\n      <td>56.35839</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>497</td>\n      <td>2435</td>\n      <td>jonp</td>\n      <td>619</td>\n      <td>2182</td>\n      <td>25</td>\n      <td>Predict HIV Progression</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>61.05770</td>\n      <td>65.60690</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>499</td>\n      <td>2435</td>\n      <td>Bwaas</td>\n      <td>663</td>\n      <td>2184</td>\n      <td>100</td>\n      <td>Predict HIV Progression</td>\n      <td>663.0</td>\n      <td>bwaas663</td>\n      <td>Bwaas</td>\n      <td>47.11539</td>\n      <td>50.00000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>500</td>\n      <td>2435</td>\n      <td>Thylacoleo</td>\n      <td>673</td>\n      <td>2187</td>\n      <td>23</td>\n      <td>Predict HIV Progression</td>\n      <td>673.0</td>\n      <td>brucetabor</td>\n      <td>Bruce Tabor</td>\n      <td>62.50000</td>\n      <td>65.75140</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>501</td>\n      <td>2435</td>\n      <td>pjonesdotcda</td>\n      <td>435</td>\n      <td>2191</td>\n      <td>80</td>\n      <td>Predict HIV Progression</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>55.28850</td>\n      <td>56.50289</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Here, we extract writeups from only top10 teams. ","metadata":{"papermill":{"duration":0.023991,"end_time":"2024-04-13T16:35:25.612063","exception":false,"start_time":"2024-04-13T16:35:25.588072","status":"completed"},"tags":[]}},{"cell_type":"code","source":"writeups = pd.merge(writeups, teams, how='left',\n                    left_on=['place', 'competition_name'],\n                    right_on=['PrivateLeaderboardRank', 'competition_name'])\nwriteups=writeups[writeups['place']<= 10]\nwriteups.head()","metadata":{"papermill":{"duration":0.352828,"end_time":"2024-04-13T16:35:25.98863","exception":false,"start_time":"2024-04-13T16:35:25.635802","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:03:18.214061Z","iopub.execute_input":"2024-04-15T04:03:18.214338Z","iopub.status.idle":"2024-04-15T04:03:18.523800Z","shell.execute_reply.started":"2024-04-15T04:03:18.214316Z","shell.execute_reply":"2024-04-15T04:03:18.522792Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"                                                link  place place_order  \\\n0  https://www.kaggle.com/c/asl-signs/discussion/...      1         1st   \n1  https://www.kaggle.com/c/asl-signs/discussion/...      2         2nd   \n2  https://www.kaggle.com/c/asl-signs/discussion/...      3         3rd   \n3  https://www.kaggle.com/c/asl-signs/discussion/...      4         4th   \n4  https://www.kaggle.com/c/asl-signs/discussion/...      5         5th   \n\n                              competition_name      nm  \\\n0  Google - Isolated Sign Language Recognition  406684   \n1  Google - Isolated Sign Language Recognition  406306   \n2  Google - Isolated Sign Language Recognition  406568   \n3  Google - Isolated Sign Language Recognition  406673   \n4  Google - Isolated Sign Language Recognition  406491   \n\n                                             writeup         Id  \\\n0  <p>First of all, I would like to express my gr...  9972071.0   \n1  <h2>TLDR</h2>\\n<p>We used an approach similar ...  9940724.0   \n2  <p>We used an <strong>ensemble of six conv1d m...  9978686.0   \n3  <p>I would like to thank the organizers and al...  9971211.0   \n4  <p>Here is a quick overview of the 5th-place s...  9963304.0   \n\n   CompetitionId                 TeamName  TeamLeaderId  \\\n0        46105.0              Hoyeol Sohn     5003978.0   \n1        46105.0                       ✌️     4212496.0   \n2        46105.0               SabaiSabai     1187467.0   \n3        46105.0                  ohkawa3     1630583.0   \n4        46105.0  ⭐⭐⭐in the prize line⭐⭐⭐     4578277.0   \n\n   PrivateLeaderboardSubmissionId  PrivateLeaderboardRank     UserId  \\\n0                      31484928.0                     1.0  5003978.0   \n1                      31443842.0                     2.0  4212496.0   \n2                      31463896.0                     3.0  1187467.0   \n3                      31484241.0                     4.0  1630583.0   \n4                      31484310.0                     5.0  4578277.0   \n\n      UserName    DisplayName  PublicScoreLeaderboardDisplay  \\\n0      hoyso48        hoyso48                       0.810313   \n1  kolyaforrat   Kolya Forrat                       0.812955   \n2       mrnnnn  Ruslan Grimov                       0.804671   \n3       chack3        ohkawa3                       0.799886   \n4  yuanzhezhou   yuanzhe zhou                       0.804457   \n\n   PrivateScoreLeaderboardDisplay  \n0                        0.892929  \n1                        0.888290  \n2                        0.884242  \n3                        0.882355  \n4                        0.880901  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>link</th>\n      <th>place</th>\n      <th>place_order</th>\n      <th>competition_name</th>\n      <th>nm</th>\n      <th>writeup</th>\n      <th>Id</th>\n      <th>CompetitionId</th>\n      <th>TeamName</th>\n      <th>TeamLeaderId</th>\n      <th>PrivateLeaderboardSubmissionId</th>\n      <th>PrivateLeaderboardRank</th>\n      <th>UserId</th>\n      <th>UserName</th>\n      <th>DisplayName</th>\n      <th>PublicScoreLeaderboardDisplay</th>\n      <th>PrivateScoreLeaderboardDisplay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>1</td>\n      <td>1st</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406684</td>\n      <td>&lt;p&gt;First of all, I would like to express my gr...</td>\n      <td>9972071.0</td>\n      <td>46105.0</td>\n      <td>Hoyeol Sohn</td>\n      <td>5003978.0</td>\n      <td>31484928.0</td>\n      <td>1.0</td>\n      <td>5003978.0</td>\n      <td>hoyso48</td>\n      <td>hoyso48</td>\n      <td>0.810313</td>\n      <td>0.892929</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>2</td>\n      <td>2nd</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406306</td>\n      <td>&lt;h2&gt;TLDR&lt;/h2&gt;\\n&lt;p&gt;We used an approach similar ...</td>\n      <td>9940724.0</td>\n      <td>46105.0</td>\n      <td>✌️</td>\n      <td>4212496.0</td>\n      <td>31443842.0</td>\n      <td>2.0</td>\n      <td>4212496.0</td>\n      <td>kolyaforrat</td>\n      <td>Kolya Forrat</td>\n      <td>0.812955</td>\n      <td>0.888290</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>3</td>\n      <td>3rd</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406568</td>\n      <td>&lt;p&gt;We used an &lt;strong&gt;ensemble of six conv1d m...</td>\n      <td>9978686.0</td>\n      <td>46105.0</td>\n      <td>SabaiSabai</td>\n      <td>1187467.0</td>\n      <td>31463896.0</td>\n      <td>3.0</td>\n      <td>1187467.0</td>\n      <td>mrnnnn</td>\n      <td>Ruslan Grimov</td>\n      <td>0.804671</td>\n      <td>0.884242</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>4</td>\n      <td>4th</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406673</td>\n      <td>&lt;p&gt;I would like to thank the organizers and al...</td>\n      <td>9971211.0</td>\n      <td>46105.0</td>\n      <td>ohkawa3</td>\n      <td>1630583.0</td>\n      <td>31484241.0</td>\n      <td>4.0</td>\n      <td>1630583.0</td>\n      <td>chack3</td>\n      <td>ohkawa3</td>\n      <td>0.799886</td>\n      <td>0.882355</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>https://www.kaggle.com/c/asl-signs/discussion/...</td>\n      <td>5</td>\n      <td>5th</td>\n      <td>Google - Isolated Sign Language Recognition</td>\n      <td>406491</td>\n      <td>&lt;p&gt;Here is a quick overview of the 5th-place s...</td>\n      <td>9963304.0</td>\n      <td>46105.0</td>\n      <td>⭐⭐⭐in the prize line⭐⭐⭐</td>\n      <td>4578277.0</td>\n      <td>31484310.0</td>\n      <td>5.0</td>\n      <td>4578277.0</td>\n      <td>yuanzhezhou</td>\n      <td>yuanzhe zhou</td>\n      <td>0.804457</td>\n      <td>0.880901</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"To enhance later information retrieval accuracy, we included additional details like the competition name, team placement, and team name in the write-up. Subsequently, the original write-up column was removed.","metadata":{"papermill":{"duration":0.024838,"end_time":"2024-04-13T16:35:26.038003","exception":false,"start_time":"2024-04-13T16:35:26.013165","status":"completed"},"tags":[]}},{"cell_type":"code","source":"writeups['writeup_edit'] = 'competition name: ' + writeups['competition_name'].astype(str) + \\\n                           ' place in competition: ' + writeups['place'].astype(str) + \\\n                           ' team name: ' + writeups['TeamName'].astype(str) + \\\n                           ' writeup: ' + writeups['writeup'].astype(str)\n","metadata":{"papermill":{"duration":0.043932,"end_time":"2024-04-13T16:35:26.107161","exception":false,"start_time":"2024-04-13T16:35:26.063229","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:03:18.525215Z","iopub.execute_input":"2024-04-15T04:03:18.525586Z","iopub.status.idle":"2024-04-15T04:03:18.537412Z","shell.execute_reply.started":"2024-04-15T04:03:18.525553Z","shell.execute_reply":"2024-04-15T04:03:18.536412Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"writeups.pop('writeup')","metadata":{"papermill":{"duration":0.04096,"end_time":"2024-04-13T16:35:26.176115","exception":false,"start_time":"2024-04-13T16:35:26.135155","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:03:18.538568Z","iopub.execute_input":"2024-04-15T04:03:18.538926Z","iopub.status.idle":"2024-04-15T04:03:18.555009Z","shell.execute_reply.started":"2024-04-15T04:03:18.538895Z","shell.execute_reply":"2024-04-15T04:03:18.554139Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"0       <p>First of all, I would like to express my gr...\n1       <h2>TLDR</h2>\\n<p>We used an approach similar ...\n2       <p>We used an <strong>ensemble of six conv1d m...\n3       <p>I would like to thank the organizers and al...\n4       <p>Here is a quick overview of the 5th-place s...\n                              ...                        \n1936    <p>&nbsp;</p>\\r\\n<p>I am using L1 Logistic Reg...\n1937    <p>Hi everybody,</p>\\r\\n<p>for the winning sol...\n1939    <p>Forum postings in other competitions have h...\n1940    <p>Surprisingly, one supervised method we trie...\n1941    <p>Hi everyone. Thanks Phil for holding such a...\nName: writeup, Length: 1095, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"# 4. Build RAG with Langchain\n\n\n \n\n![RAG.png](attachment:0d663a18-bfdc-4d75-b1fd-30365b49da61.png)\n\n\n","metadata":{"papermill":{"duration":0.027635,"end_time":"2024-04-13T16:35:26.233984","exception":false,"start_time":"2024-04-13T16:35:26.206349","status":"completed"},"tags":[]},"attachments":{"0d663a18-bfdc-4d75-b1fd-30365b49da61.png":{"image/png":""}}},{"cell_type":"markdown","source":"## 4.1 Document Loading and Splitting \n\n- Langchain document loaders: https://python.langchain.com/docs/modules/data_connection/document_loaders/\n- Langchain text splitters: https://python.langchain.com/docs/modules/data_connection/document_transformers/","metadata":{"papermill":{"duration":0.026047,"end_time":"2024-04-13T16:35:26.288065","exception":false,"start_time":"2024-04-13T16:35:26.262018","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from langchain_community.document_loaders import DataFrameLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nloader = DataFrameLoader(writeups, page_content_column=\"writeup_edit\")\nraw_docs=loader.load()\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=3000,\n    chunk_overlap=100,\n)\ndocs = text_splitter.split_documents(raw_docs)","metadata":{"papermill":{"duration":0.447988,"end_time":"2024-04-13T16:35:26.761357","exception":false,"start_time":"2024-04-13T16:35:26.313369","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:03:18.556066Z","iopub.execute_input":"2024-04-15T04:03:18.556376Z","iopub.status.idle":"2024-04-15T04:03:18.972148Z","shell.execute_reply.started":"2024-04-15T04:03:18.556344Z","shell.execute_reply":"2024-04-15T04:03:18.971354Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":"## 4.2 Storage: Allowing More Accurate Search Results with Similarity Search\n- Langchain huggingface embeddings:\n\nhttps://api.python.langchain.com/en/latest/embeddings/langchain_community.embeddings.huggingface.HuggingFaceEmbeddings.html\n- Langchain faiss: \n\nhttps://python.langchain.com/docs/integrations/vectorstores/faiss/","metadata":{"papermill":{"duration":0.023506,"end_time":"2024-04-13T16:35:26.808997","exception":false,"start_time":"2024-04-13T16:35:26.785491","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from langchain.embeddings import HuggingFaceEmbeddings\nfrom langchain.vectorstores import FAISS\nmodel_name = \"intfloat/multilingual-e5-small\"\nmodel_kwargs = {'device': 'cpu'}\nencode_kwargs = {'normalize_embeddings': False}\nembeddings = HuggingFaceEmbeddings(\n    model_name=model_name,\n    model_kwargs=model_kwargs,\n    encode_kwargs=encode_kwargs\n)\nvectorstore = FAISS.from_documents(docs, embeddings)\nvectorstore.save_local(\"../kaggle/working/vectorstore\")","metadata":{"papermill":{"duration":12.877594,"end_time":"2024-04-13T16:35:39.709988","exception":false,"start_time":"2024-04-13T16:35:26.832394","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:03:18.973137Z","iopub.execute_input":"2024-04-15T04:03:18.973400Z","iopub.status.idle":"2024-04-15T04:20:15.373380Z","shell.execute_reply.started":"2024-04-15T04:03:18.973378Z","shell.execute_reply":"2024-04-15T04:20:15.372555Z"},"trusted":true},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/387 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e8edef7460d74249b7a040f9d41582e0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/160k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c8a230853bef4e75bf86bf2963b87129"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/57.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"30c144254480434ba38031619c60a40c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/655 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"536859c793dd43e68f89c3d915533fd4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/471M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7582540daef1485aae4549902e63cb88"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/443 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c813c14d6ff24b0bb8ef6687471699c5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentencepiece.bpe.model:   0%|          | 0.00/5.07M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f8be9cd45af24029965ccfef818a0389"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/17.1M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6e9eab9fc31d44c5ac02834210d610c2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/167 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ec52ab62da844c17b9a28e865623ca12"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"1_Pooling/config.json:   0%|          | 0.00/200 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"85c46a7cc87f4f22af54cd39f64a2f2c"}},"metadata":{}}]},{"cell_type":"markdown","source":"## 4.3 Constructing a Conversational Retrieval Chain for Question Answering\n","metadata":{"papermill":{"duration":0.026759,"end_time":"2024-04-13T16:35:39.764921","exception":false,"start_time":"2024-04-13T16:35:39.738162","status":"completed"},"tags":[]}},{"cell_type":"markdown","source":"### 4.3.1 Prompt Engineering\n","metadata":{"papermill":{"duration":0.025583,"end_time":"2024-04-13T16:35:39.817281","exception":false,"start_time":"2024-04-13T16:35:39.791698","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from langchain.prompts import PromptTemplate\ntemplate_qg = \"\"\"Given the following conversation and a following question:\nIf the following question is RELEVANT and A FOLLOW-UP question to the previous conversation, rephrase it as a standalone question considering the conversation history, in its original language. \nIf the following question is NEW and UNRELATED to the previous conversation, DO NOT rephrase it and simply output it as a standalone question. \n\nChat History:\n{chat_history}\nFollowing question: {question}\nstandalone question:\"\"\"\n\nprompt_qg = PromptTemplate(\n        template=template_qg,\n        input_variables=[\"chat_history\", \"question\"],\n        output_parser=None,\n        partial_variables={},\n        template_format='f-string',\n        validate_template=True,\n)\n# Template for answering based on provided rephrased question and context\nprompt_template_qa = \"\"\"You are a expert of listing, summarizing, explaining, and teaching concepts used in Kaggle writeups. You can provide not only answer to an question, but explanations or examples of how to apply an concept or its significance in the contexts of a project.\nUse the following context to answer the question provided. \nWhen answering, DO NOT simply answer the question, but provide some additional explanations or examples along with the answer. \nIf you don't know the answer, just say that you cannot answer the question, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nAnswer:\"\"\"\nprompt_qa = PromptTemplate(\n        template=prompt_template_qa, \n        input_variables=[\"context\", \"question\"]\n)\nchain_type_kwargs = {\"prompt\": prompt_qa}","metadata":{"papermill":{"duration":0.111336,"end_time":"2024-04-13T16:35:39.954623","exception":false,"start_time":"2024-04-13T16:35:39.843287","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:15.374719Z","iopub.execute_input":"2024-04-15T04:20:15.375761Z","iopub.status.idle":"2024-04-15T04:20:15.889612Z","shell.execute_reply.started":"2024-04-15T04:20:15.375724Z","shell.execute_reply":"2024-04-15T04:20:15.888833Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":"### 4.3.2 Custom Conversational Retrieval Chain\n\n","metadata":{"papermill":{"duration":0.026059,"end_time":"2024-04-13T16:35:40.006357","exception":false,"start_time":"2024-04-13T16:35:39.980298","status":"completed"},"tags":[]}},{"cell_type":"code","source":"from langchain.chains import LLMChain\nfrom langchain.chains.question_answering import load_qa_chain\nfrom langchain.chains import ConversationalRetrievalChain\nimport statistics\nimport warnings\nwarnings.filterwarnings('ignore')\ndef calculate_cutoff_score(query, k=10):\n    relevance_scores = [entry[1] for entry in vectorstore._similarity_search_with_relevance_scores(query, k=k)]\n    average_score = sum(relevance_scores) / len(relevance_scores)\n    std_dev = statistics.stdev(relevance_scores)\n    cutoff_score = average_score + 0.5*std_dev\n    return cutoff_score\nllm = GemmaLC(gemma_lm, 6000)\nchat_record = []\nchat_history=[]\nretry_count = 0\ndef crc_qa(query):\n    global chat_record, chat_history, retry_count  \n    cutoff_score = calculate_cutoff_score(query, k=8)\n    retriever = vectorstore.as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": cutoff_score, \"k\":5})\n    question_generator = LLMChain(llm=llm, prompt=prompt_qg)\n    doc_chain = load_qa_chain(llm=llm, chain_type=\"stuff\", prompt=prompt_qa)\n    qa = ConversationalRetrievalChain(\n        retriever=retriever,\n        question_generator=question_generator,\n        combine_docs_chain=doc_chain,\n        return_source_documents=True\n    )\n    result = qa.invoke({\"question\": query, \"chat_history\": chat_history})\n    index = result['answer'].find('Answer:')\n    extracted_text = result['answer'][index + len('Answer:'):]\n    answer = extracted_text.strip()\n    if 'I cannot' in answer:\n        if retry_count < 2:\n            chat_history = []\n            retry_count += 1\n            crc_qa(query)\n        else:\n            print(answer)\n            chat_history=[]\n            return \n    else:\n        print(answer)\n        chat_record.append((query, answer))\n        chat_history.append((query, answer))\n        reference_infos = []\n        source_docs = result['source_documents']\n        for i, doc in enumerate(source_docs, 1): \n            reference_infos.append(f\"{i}. {doc.metadata['link']}\")\n        print(\"-\" * 40)\n        print(\"References:\")\n        for info in reference_infos:\n            print(info)","metadata":{"papermill":{"duration":0.140604,"end_time":"2024-04-13T16:35:40.172075","exception":false,"start_time":"2024-04-13T16:35:40.031471","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:15.890882Z","iopub.execute_input":"2024-04-15T04:20:15.891330Z","iopub.status.idle":"2024-04-15T04:20:16.002443Z","shell.execute_reply.started":"2024-04-15T04:20:15.891295Z","shell.execute_reply":"2024-04-15T04:20:16.001774Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"# 5. Test Run\n\n ","metadata":{"papermill":{"duration":0.025326,"end_time":"2024-04-13T16:35:40.223057","exception":false,"start_time":"2024-04-13T16:35:40.197731","status":"completed"},"tags":[]}},{"cell_type":"code","source":"# First new question \nquery='What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":24.729759,"end_time":"2024-04-13T16:36:04.97791","exception":false,"start_time":"2024-04-13T16:35:40.248151","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:16.003438Z","iopub.execute_input":"2024-04-15T04:20:16.003690Z","iopub.status.idle":"2024-04-15T04:20:39.778627Z","shell.execute_reply.started":"2024-04-15T04:20:16.003668Z","shell.execute_reply":"2024-04-15T04:20:39.777647Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"**Key Concepts and Methods:**\n\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\n* **Polars:** A library for numerical computing in Python that was used for feature creation.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/otto-recommender-system/discussion/383130\n2. https://www.kaggle.com/c/otto-recommender-system/discussion/383013\n3. https://www.kaggle.com/c/otto-recommender-system/discussion/382802\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 1 for the first question \nquery='Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":10.120206,"end_time":"2024-04-13T16:36:15.124165","exception":false,"start_time":"2024-04-13T16:36:05.003959","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:39.779846Z","iopub.execute_input":"2024-04-15T04:20:39.780131Z","iopub.status.idle":"2024-04-15T04:20:49.843801Z","shell.execute_reply.started":"2024-04-15T04:20:39.780106Z","shell.execute_reply":"2024-04-15T04:20:49.842780Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/otto-recommender-system/discussion/382802\n2. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n3. https://www.kaggle.com/c/h-and-m-personalized-fashion-recommendations/discussion/324197\n4. https://www.kaggle.com/c/google-ai-open-images-visual-relationship-track/discussion/64631\n5. https://www.kaggle.com/c/quora-question-pairs/discussion/34310\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 2 for the first question \nquery='Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? '\ncrc_qa(query)","metadata":{"papermill":{"duration":11.514749,"end_time":"2024-04-13T16:36:26.664812","exception":false,"start_time":"2024-04-13T16:36:15.150063","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:49.845212Z","iopub.execute_input":"2024-04-15T04:20:49.846887Z","iopub.status.idle":"2024-04-15T04:21:01.317987Z","shell.execute_reply.started":"2024-04-15T04:20:49.846858Z","shell.execute_reply":"2024-04-15T04:21:01.317009Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"Sure. Here's more details about Lightgbm Ranker:\n\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\n* Lightgbm is also a robust model that can handle noisy data.\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\n* If the learning rate is too high, Lightgbm can overfit the data.\n* If the number of iterations is too high, Lightgbm can become unstable.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/otto-recommender-system/discussion/382802\n2. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n3. https://www.kaggle.com/c/h-and-m-personalized-fashion-recommendations/discussion/324197\n4. https://www.kaggle.com/c/quora-question-pairs/discussion/34310\n5. https://www.kaggle.com/c/g-research-crypto-forecasting/discussion/323098\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The chat history is expected to be the same as the chat record now as all questions are answered. ","metadata":{"papermill":{"duration":0.025685,"end_time":"2024-04-13T16:36:26.716899","exception":false,"start_time":"2024-04-13T16:36:26.691214","status":"completed"},"tags":[]}},{"cell_type":"code","source":"chat_history","metadata":{"papermill":{"duration":0.035189,"end_time":"2024-04-13T16:36:26.7775","exception":false,"start_time":"2024-04-13T16:36:26.742311","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:01.319225Z","iopub.execute_input":"2024-04-15T04:21:01.319541Z","iopub.status.idle":"2024-04-15T04:21:01.326417Z","shell.execute_reply.started":"2024-04-15T04:21:01.319514Z","shell.execute_reply":"2024-04-15T04:21:01.325192Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\")]"},"metadata":{}}]},{"cell_type":"code","source":"chat_record","metadata":{"papermill":{"duration":0.034789,"end_time":"2024-04-13T16:36:26.838687","exception":false,"start_time":"2024-04-13T16:36:26.803898","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:01.327805Z","iopub.execute_input":"2024-04-15T04:21:01.328130Z","iopub.status.idle":"2024-04-15T04:21:01.338301Z","shell.execute_reply.started":"2024-04-15T04:21:01.328104Z","shell.execute_reply":"2024-04-15T04:21:01.337444Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\")]"},"metadata":{}}]},{"cell_type":"code","source":"# Second new question \nquery='What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? '\ncrc_qa(query)","metadata":{"papermill":{"duration":17.20253,"end_time":"2024-04-13T16:36:44.067166","exception":false,"start_time":"2024-04-13T16:36:26.864636","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:01.339884Z","iopub.execute_input":"2024-04-15T04:21:01.340557Z","iopub.status.idle":"2024-04-15T04:21:18.490620Z","shell.execute_reply.started":"2024-04-15T04:21:01.340532Z","shell.execute_reply":"2024-04-15T04:21:18.489650Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"**Critical Concepts and Methods:**\n\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376357\n2. https://www.kaggle.com/c/g2net-gravitational-wave-detection/discussion/275343\n3. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376504\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 1 for the second question \nquery='Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":19.624736,"end_time":"2024-04-13T16:37:03.721135","exception":false,"start_time":"2024-04-13T16:36:44.096399","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:18.491822Z","iopub.execute_input":"2024-04-15T04:21:18.492113Z","iopub.status.idle":"2024-04-15T04:21:38.065567Z","shell.execute_reply.started":"2024-04-15T04:21:18.492087Z","shell.execute_reply":"2024-04-15T04:21:38.064664Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\n\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\n\n**How Dynamic Programming Works:**\n\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\n\n**Role of Dynamic Programming in the Competition:**\n\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\n\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376357\n2. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376233\n3. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n4. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376504\n5. https://www.kaggle.com/c/g2net-gravitational-wave-detection/discussion/275353\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 2 for the second question \nquery='Can you tell me what techniques may NOT work well for the G2Net competitionn and why?'\ncrc_qa(query)","metadata":{"papermill":{"duration":12.946966,"end_time":"2024-04-13T16:37:16.694685","exception":false,"start_time":"2024-04-13T16:37:03.747719","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:38.066986Z","iopub.execute_input":"2024-04-15T04:21:38.067374Z","iopub.status.idle":"2024-04-15T04:21:50.951629Z","shell.execute_reply.started":"2024-04-15T04:21:38.067340Z","shell.execute_reply":"2024-04-15T04:21:50.950654Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"Sure, here are some techniques that may NOT work well for the G2Net competition and why:\n\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376357\n2. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376504\n3. https://www.kaggle.com/c/g2net-detecting-continuous-gravitational-waves/discussion/376233\n4. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n5. https://www.kaggle.com/c/g2net-gravitational-wave-detection/discussion/275476\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The chat history is expected to be reset due to the second new question, however, the chat recod should consist of all answerable QA sets. ","metadata":{"papermill":{"duration":0.02681,"end_time":"2024-04-13T16:37:16.753001","exception":false,"start_time":"2024-04-13T16:37:16.726191","status":"completed"},"tags":[]}},{"cell_type":"code","source":"chat_history","metadata":{"papermill":{"duration":0.036608,"end_time":"2024-04-13T16:37:16.816018","exception":false,"start_time":"2024-04-13T16:37:16.77941","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:50.952839Z","iopub.execute_input":"2024-04-15T04:21:50.953158Z","iopub.status.idle":"2024-04-15T04:21:50.959353Z","shell.execute_reply.started":"2024-04-15T04:21:50.953129Z","shell.execute_reply":"2024-04-15T04:21:50.958425Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? ',\n  '**Critical Concepts and Methods:**\\n\\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.'),\n ('Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?',\n  \"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\\n\\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\\n\\n**How Dynamic Programming Works:**\\n\\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\\n\\n**Role of Dynamic Programming in the Competition:**\\n\\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\\n\\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\"),\n ('Can you tell me what techniques may NOT work well for the G2Net competitionn and why?',\n  'Sure, here are some techniques that may NOT work well for the G2Net competition and why:\\n\\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.')]"},"metadata":{}}]},{"cell_type":"code","source":"chat_record","metadata":{"papermill":{"duration":0.035966,"end_time":"2024-04-13T16:37:16.878696","exception":false,"start_time":"2024-04-13T16:37:16.84273","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:50.960706Z","iopub.execute_input":"2024-04-15T04:21:50.961061Z","iopub.status.idle":"2024-04-15T04:21:50.972720Z","shell.execute_reply.started":"2024-04-15T04:21:50.961029Z","shell.execute_reply":"2024-04-15T04:21:50.971822Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\"),\n ('What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? ',\n  '**Critical Concepts and Methods:**\\n\\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.'),\n ('Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?',\n  \"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\\n\\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\\n\\n**How Dynamic Programming Works:**\\n\\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\\n\\n**Role of Dynamic Programming in the Competition:**\\n\\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\\n\\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\"),\n ('Can you tell me what techniques may NOT work well for the G2Net competitionn and why?',\n  'Sure, here are some techniques that may NOT work well for the G2Net competition and why:\\n\\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.')]"},"metadata":{}}]},{"cell_type":"code","source":"# Third new question \nquery='What critical concepts and methods are used in the Foursquare - Location Matching competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":17.707618,"end_time":"2024-04-13T16:37:34.61332","exception":false,"start_time":"2024-04-13T16:37:16.905702","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:21:50.973911Z","iopub.execute_input":"2024-04-15T04:21:50.974179Z","iopub.status.idle":"2024-04-15T04:22:08.635472Z","shell.execute_reply.started":"2024-04-15T04:21:50.974156Z","shell.execute_reply":"2024-04-15T04:22:08.634559Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"**Critical Concepts and Methods:**\n\n- **Candidate Matching:** The competition involves creating candidate pairs based on the location coordinates. Two methods were used for candidate matching: Euclidean distance and Cos similarity of name embeddings.\n- **Feature Engineering:** Additional features were created based on the existing features, including character similarity features, Euclidean distance, and embedding of name with svd for dimensionality reduction.\n- **Binary Classification:** A binary classification model was used to determine if the locations are identical or not. The kNN algorithm was used for the classification, with the optimal parameters determined through cross-validation.\n- **Post-processing:** After the candidate matching and feature engineering, the data was post-processed to remove the pairs that would have been incorrect.\n- **Cross Validation Strategy:** Local evaluation was done with 2 fold cross validation, and the final model was trained on all of the 2 fold data.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/foursquare-location-matching/discussion/336055\n2. https://www.kaggle.com/c/foursquare-location-matching/discussion/335928\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 1 for the third question \nquery='Tell me more about Candidate Matching and why is it been chosen as a solution for the competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":9.497404,"end_time":"2024-04-13T16:37:44.137995","exception":false,"start_time":"2024-04-13T16:37:34.640591","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:08.641681Z","iopub.execute_input":"2024-04-15T04:22:08.641976Z","iopub.status.idle":"2024-04-15T04:22:18.091153Z","shell.execute_reply.started":"2024-04-15T04:22:08.641951Z","shell.execute_reply":"2024-04-15T04:22:18.090140Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"The candidate matching method was chosen because it achieved the best performance on the validation data among the various methods tested. The kNN algorithm was found to be the most effective method for candidate matching, with the optimal parameters determined through cross-validation.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/foursquare-location-matching/discussion/336055\n2. https://www.kaggle.com/c/foursquare-location-matching/discussion/335928\n3. https://www.kaggle.com/c/ashrae-energy-prediction/discussion/123481\n4. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n5. https://www.kaggle.com/c/amex-default-prediction/discussion/347637\n","output_type":"stream"}]},{"cell_type":"code","source":"# Follow-up question 2 for the third question \nquery='Explain Binary Classification and why is it chosen for this competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":13.743907,"end_time":"2024-04-13T16:37:57.909296","exception":false,"start_time":"2024-04-13T16:37:44.165389","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:18.092449Z","iopub.execute_input":"2024-04-15T04:22:18.092777Z","iopub.status.idle":"2024-04-15T04:22:31.798474Z","shell.execute_reply.started":"2024-04-15T04:22:18.092750Z","shell.execute_reply":"2024-04-15T04:22:31.797393Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Sure. Here's an explanation of Binary Classification and why it is chosen for this competition:\n\nBinary classification is a machine learning task that involves classifying data points into two categories: positive and negative. The goal is to create a model that can accurately predict the category of a new data point.\n\nIn this case, the data points are the candidate locations, and the two categories are locations that are the same and locations that are different. The binary classification model is used to determine if the locations are the same or not.\n\nThe kNN algorithm was chosen for the binary classification task because it is a simple and effective algorithm that can be easily tuned to the problem. The kNN algorithm works by finding the k most similar data points to the new data point, and then classifying the new data point based on the majority class of the k most similar data points.\n\nThe kNN algorithm was found to be the most effective method for binary classification on the validation data, with the optimal parameters determined through cross-validation.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/foursquare-location-matching/discussion/335928\n2. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n3. https://www.kaggle.com/c/ashrae-energy-prediction/discussion/123481\n4. https://www.kaggle.com/c/amex-default-prediction/discussion/347637\n5. https://www.kaggle.com/c/foursquare-location-matching/discussion/336055\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Same, the chat history is expected to be reset due to the third new question, however, the chat recod should consist of all answerable QA sets. ","metadata":{"papermill":{"duration":0.026912,"end_time":"2024-04-13T16:37:57.963896","exception":false,"start_time":"2024-04-13T16:37:57.936984","status":"completed"},"tags":[]}},{"cell_type":"code","source":"chat_history","metadata":{"papermill":{"duration":0.037145,"end_time":"2024-04-13T16:37:58.028763","exception":false,"start_time":"2024-04-13T16:37:57.991618","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:31.799834Z","iopub.execute_input":"2024-04-15T04:22:31.800212Z","iopub.status.idle":"2024-04-15T04:22:31.807336Z","shell.execute_reply.started":"2024-04-15T04:22:31.800178Z","shell.execute_reply":"2024-04-15T04:22:31.806369Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the Foursquare - Location Matching competition?',\n  '**Critical Concepts and Methods:**\\n\\n- **Candidate Matching:** The competition involves creating candidate pairs based on the location coordinates. Two methods were used for candidate matching: Euclidean distance and Cos similarity of name embeddings.\\n- **Feature Engineering:** Additional features were created based on the existing features, including character similarity features, Euclidean distance, and embedding of name with svd for dimensionality reduction.\\n- **Binary Classification:** A binary classification model was used to determine if the locations are identical or not. The kNN algorithm was used for the classification, with the optimal parameters determined through cross-validation.\\n- **Post-processing:** After the candidate matching and feature engineering, the data was post-processed to remove the pairs that would have been incorrect.\\n- **Cross Validation Strategy:** Local evaluation was done with 2 fold cross validation, and the final model was trained on all of the 2 fold data.'),\n ('Tell me more about Candidate Matching and why is it been chosen as a solution for the competition?',\n  'The candidate matching method was chosen because it achieved the best performance on the validation data among the various methods tested. The kNN algorithm was found to be the most effective method for candidate matching, with the optimal parameters determined through cross-validation.'),\n ('Explain Binary Classification and why is it chosen for this competition?',\n  \"Sure. Here's an explanation of Binary Classification and why it is chosen for this competition:\\n\\nBinary classification is a machine learning task that involves classifying data points into two categories: positive and negative. The goal is to create a model that can accurately predict the category of a new data point.\\n\\nIn this case, the data points are the candidate locations, and the two categories are locations that are the same and locations that are different. The binary classification model is used to determine if the locations are the same or not.\\n\\nThe kNN algorithm was chosen for the binary classification task because it is a simple and effective algorithm that can be easily tuned to the problem. The kNN algorithm works by finding the k most similar data points to the new data point, and then classifying the new data point based on the majority class of the k most similar data points.\\n\\nThe kNN algorithm was found to be the most effective method for binary classification on the validation data, with the optimal parameters determined through cross-validation.\")]"},"metadata":{}}]},{"cell_type":"code","source":"chat_record","metadata":{"papermill":{"duration":0.036501,"end_time":"2024-04-13T16:37:58.093209","exception":false,"start_time":"2024-04-13T16:37:58.056708","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:31.808968Z","iopub.execute_input":"2024-04-15T04:22:31.809569Z","iopub.status.idle":"2024-04-15T04:22:31.818633Z","shell.execute_reply.started":"2024-04-15T04:22:31.809536Z","shell.execute_reply":"2024-04-15T04:22:31.817660Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\"),\n ('What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? ',\n  '**Critical Concepts and Methods:**\\n\\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.'),\n ('Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?',\n  \"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\\n\\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\\n\\n**How Dynamic Programming Works:**\\n\\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\\n\\n**Role of Dynamic Programming in the Competition:**\\n\\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\\n\\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\"),\n ('Can you tell me what techniques may NOT work well for the G2Net competitionn and why?',\n  'Sure, here are some techniques that may NOT work well for the G2Net competition and why:\\n\\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.'),\n ('What critical concepts and methods are used in the Foursquare - Location Matching competition?',\n  '**Critical Concepts and Methods:**\\n\\n- **Candidate Matching:** The competition involves creating candidate pairs based on the location coordinates. Two methods were used for candidate matching: Euclidean distance and Cos similarity of name embeddings.\\n- **Feature Engineering:** Additional features were created based on the existing features, including character similarity features, Euclidean distance, and embedding of name with svd for dimensionality reduction.\\n- **Binary Classification:** A binary classification model was used to determine if the locations are identical or not. The kNN algorithm was used for the classification, with the optimal parameters determined through cross-validation.\\n- **Post-processing:** After the candidate matching and feature engineering, the data was post-processed to remove the pairs that would have been incorrect.\\n- **Cross Validation Strategy:** Local evaluation was done with 2 fold cross validation, and the final model was trained on all of the 2 fold data.'),\n ('Tell me more about Candidate Matching and why is it been chosen as a solution for the competition?',\n  'The candidate matching method was chosen because it achieved the best performance on the validation data among the various methods tested. The kNN algorithm was found to be the most effective method for candidate matching, with the optimal parameters determined through cross-validation.'),\n ('Explain Binary Classification and why is it chosen for this competition?',\n  \"Sure. Here's an explanation of Binary Classification and why it is chosen for this competition:\\n\\nBinary classification is a machine learning task that involves classifying data points into two categories: positive and negative. The goal is to create a model that can accurately predict the category of a new data point.\\n\\nIn this case, the data points are the candidate locations, and the two categories are locations that are the same and locations that are different. The binary classification model is used to determine if the locations are the same or not.\\n\\nThe kNN algorithm was chosen for the binary classification task because it is a simple and effective algorithm that can be easily tuned to the problem. The kNN algorithm works by finding the k most similar data points to the new data point, and then classifying the new data point based on the majority class of the k most similar data points.\\n\\nThe kNN algorithm was found to be the most effective method for binary classification on the validation data, with the optimal parameters determined through cross-validation.\")]"},"metadata":{}}]},{"cell_type":"code","source":"# Try a fourth new question. As necessary information is not included in the provided data storage, it is expcted that the model admits that it cannot answer the question without making up information. \nquery='When is the birthday of Albert Einstein?'\ncrc_qa(query)","metadata":{"papermill":{"duration":9.183058,"end_time":"2024-04-13T16:38:07.303367","exception":false,"start_time":"2024-04-13T16:37:58.120309","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:31.819725Z","iopub.execute_input":"2024-04-15T04:22:31.820028Z","iopub.status.idle":"2024-04-15T04:22:40.949580Z","shell.execute_reply.started":"2024-04-15T04:22:31.820000Z","shell.execute_reply":"2024-04-15T04:22:40.948699Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"I cannot answer this question from the provided context, as the context does not provide any information about the birthday of Albert Einstein.\n","output_type":"stream"}]},{"cell_type":"code","source":"# Try a fifth new question. As necessary information is not included in the provided data storage, it is expcted that the model admits that it cannot answer the question without making up information. \nquery='Who is the 46th president of the United States?'\ncrc_qa(query)","metadata":{"papermill":{"duration":4.665033,"end_time":"2024-04-13T16:38:11.996405","exception":false,"start_time":"2024-04-13T16:38:07.331372","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:40.951046Z","iopub.execute_input":"2024-04-15T04:22:40.951727Z","iopub.status.idle":"2024-04-15T04:22:45.584279Z","shell.execute_reply.started":"2024-04-15T04:22:40.951689Z","shell.execute_reply":"2024-04-15T04:22:45.583340Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"The context does not provide any information about the 46th president of the United States, so I cannot answer this question from the provided context.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"As the above two questions are both not answerable, chat history is reset and is expected to be an empty list. However, chat record should still hold all information of answered QA sets in the conversation session. ","metadata":{"papermill":{"duration":0.034208,"end_time":"2024-04-13T16:38:12.070493","exception":false,"start_time":"2024-04-13T16:38:12.036285","status":"completed"},"tags":[]}},{"cell_type":"code","source":"chat_history","metadata":{"papermill":{"duration":0.038015,"end_time":"2024-04-13T16:38:12.137765","exception":false,"start_time":"2024-04-13T16:38:12.09975","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:45.585486Z","iopub.execute_input":"2024-04-15T04:22:45.585825Z","iopub.status.idle":"2024-04-15T04:22:45.591936Z","shell.execute_reply.started":"2024-04-15T04:22:45.585799Z","shell.execute_reply":"2024-04-15T04:22:45.590992Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"[]"},"metadata":{}}]},{"cell_type":"code","source":"chat_record","metadata":{"papermill":{"duration":0.038671,"end_time":"2024-04-13T16:38:12.205112","exception":false,"start_time":"2024-04-13T16:38:12.166441","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:45.593063Z","iopub.execute_input":"2024-04-15T04:22:45.593409Z","iopub.status.idle":"2024-04-15T04:22:45.604971Z","shell.execute_reply.started":"2024-04-15T04:22:45.593379Z","shell.execute_reply":"2024-04-15T04:22:45.603993Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\"),\n ('What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? ',\n  '**Critical Concepts and Methods:**\\n\\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.'),\n ('Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?',\n  \"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\\n\\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\\n\\n**How Dynamic Programming Works:**\\n\\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\\n\\n**Role of Dynamic Programming in the Competition:**\\n\\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\\n\\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\"),\n ('Can you tell me what techniques may NOT work well for the G2Net competitionn and why?',\n  'Sure, here are some techniques that may NOT work well for the G2Net competition and why:\\n\\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.'),\n ('What critical concepts and methods are used in the Foursquare - Location Matching competition?',\n  '**Critical Concepts and Methods:**\\n\\n- **Candidate Matching:** The competition involves creating candidate pairs based on the location coordinates. Two methods were used for candidate matching: Euclidean distance and Cos similarity of name embeddings.\\n- **Feature Engineering:** Additional features were created based on the existing features, including character similarity features, Euclidean distance, and embedding of name with svd for dimensionality reduction.\\n- **Binary Classification:** A binary classification model was used to determine if the locations are identical or not. The kNN algorithm was used for the classification, with the optimal parameters determined through cross-validation.\\n- **Post-processing:** After the candidate matching and feature engineering, the data was post-processed to remove the pairs that would have been incorrect.\\n- **Cross Validation Strategy:** Local evaluation was done with 2 fold cross validation, and the final model was trained on all of the 2 fold data.'),\n ('Tell me more about Candidate Matching and why is it been chosen as a solution for the competition?',\n  'The candidate matching method was chosen because it achieved the best performance on the validation data among the various methods tested. The kNN algorithm was found to be the most effective method for candidate matching, with the optimal parameters determined through cross-validation.'),\n ('Explain Binary Classification and why is it chosen for this competition?',\n  \"Sure. Here's an explanation of Binary Classification and why it is chosen for this competition:\\n\\nBinary classification is a machine learning task that involves classifying data points into two categories: positive and negative. The goal is to create a model that can accurately predict the category of a new data point.\\n\\nIn this case, the data points are the candidate locations, and the two categories are locations that are the same and locations that are different. The binary classification model is used to determine if the locations are the same or not.\\n\\nThe kNN algorithm was chosen for the binary classification task because it is a simple and effective algorithm that can be easily tuned to the problem. The kNN algorithm works by finding the k most similar data points to the new data point, and then classifying the new data point based on the majority class of the k most similar data points.\\n\\nThe kNN algorithm was found to be the most effective method for binary classification on the validation data, with the optimal parameters determined through cross-validation.\")]"},"metadata":{}}]},{"cell_type":"code","source":"# Sixth new question\nquery='What critical concepts and methods are used in the Google - Isolated Sign Language Recognition competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":8.604004,"end_time":"2024-04-13T16:38:20.839544","exception":false,"start_time":"2024-04-13T16:38:12.23554","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:45.606035Z","iopub.execute_input":"2024-04-15T04:22:45.606294Z","iopub.status.idle":"2024-04-15T04:22:54.180693Z","shell.execute_reply.started":"2024-04-15T04:22:45.606272Z","shell.execute_reply":"2024-04-15T04:22:54.179714Z"},"trusted":true},"execution_count":36,"outputs":[{"name":"stdout","text":"**Key Concepts and Methods:**\n\n- **Data Preprocessing:**\n    - Feature extraction: 18 lip points, 20 pose points (including arms, shoulders, eyebrows, and nose), and all hand points.\n    - Motion features: future and history motion.\n    - Randomly selected distances and angles were included.\n\n\n- **Transformer Model:**\n    - EfficientNet-B0 model was used for the backbone.\n    - DeBERTa was used as the transformer model.\n    - Attention mechanism was modified for efficiency.\n\n\n- **Augmentation:**\n    - Various augmentations were applied to increase the size and diversity of the training data.\n    - The model was trained on a single fold from 8 randomly split folds, as well as DeBERTa and BERT trained on the full dataset.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/asl-signs/discussion/406491\n2. https://www.kaggle.com/c/asl-signs/discussion/406673\n3. https://www.kaggle.com/c/asl-signs/discussion/406306\n4. https://www.kaggle.com/c/asl-signs/discussion/406537\n","output_type":"stream"}]},{"cell_type":"code","source":"chat_history","metadata":{"papermill":{"duration":0.037205,"end_time":"2024-04-13T16:38:20.905889","exception":false,"start_time":"2024-04-13T16:38:20.868684","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:54.181934Z","iopub.execute_input":"2024-04-15T04:22:54.182236Z","iopub.status.idle":"2024-04-15T04:22:54.187956Z","shell.execute_reply.started":"2024-04-15T04:22:54.182203Z","shell.execute_reply":"2024-04-15T04:22:54.187018Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the Google - Isolated Sign Language Recognition competition?',\n  '**Key Concepts and Methods:**\\n\\n- **Data Preprocessing:**\\n    - Feature extraction: 18 lip points, 20 pose points (including arms, shoulders, eyebrows, and nose), and all hand points.\\n    - Motion features: future and history motion.\\n    - Randomly selected distances and angles were included.\\n\\n\\n- **Transformer Model:**\\n    - EfficientNet-B0 model was used for the backbone.\\n    - DeBERTa was used as the transformer model.\\n    - Attention mechanism was modified for efficiency.\\n\\n\\n- **Augmentation:**\\n    - Various augmentations were applied to increase the size and diversity of the training data.\\n    - The model was trained on a single fold from 8 randomly split folds, as well as DeBERTa and BERT trained on the full dataset.')]"},"metadata":{}}]},{"cell_type":"code","source":"chat_record","metadata":{"papermill":{"duration":0.037519,"end_time":"2024-04-13T16:38:20.971732","exception":false,"start_time":"2024-04-13T16:38:20.934213","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:54.189163Z","iopub.execute_input":"2024-04-15T04:22:54.189785Z","iopub.status.idle":"2024-04-15T04:22:54.199495Z","shell.execute_reply.started":"2024-04-15T04:22:54.189753Z","shell.execute_reply":"2024-04-15T04:22:54.198622Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"[('What critical concepts and methods are used in the OTTO – Multi-Objective Recommender System competition?',\n  '**Key Concepts and Methods:**\\n\\n* **Candidate Rerank:** A technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy.\\n* **Feature Creation:** The competition employed various features, including session features and aid features, to improve the candidate generation and ranking models.\\n* **Lightgbm Ranking Model:** A light gradient boosting model that was used for ranking the items.\\n* **Treelite Ranking Model:** A tree-based ranking model that was used in conjunction with the Lightgbm model.\\n* **Numba Pipeline:** A library for numerical computing in Python that was used for candidate generation and feature creation.\\n* **Polars:** A library for numerical computing in Python that was used for feature creation.'),\n ('Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?',\n  'Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.'),\n ('Provid me more details about Lightgbm Ranker. Why is it chosen and what may work well or not well for the competition? ',\n  \"Sure. Here's more details about Lightgbm Ranker:\\n\\n* Lightgbm is a light gradient boosting model that is known for its speed and accuracy.\\n* It is chosen for this competition because it is a very efficient model that can be used for large datasets.\\n* Lightgbm is also a robust model that can handle noisy data.\\n* However, Lightgbm can be sensitive to the hyperparameters, such as the learning rate and the number of iterations.\\n* If the learning rate is too high, Lightgbm can overfit the data.\\n* If the number of iterations is too high, Lightgbm can become unstable.\"),\n ('What critical concepts and methods are used in the G2Net Detecting Continuous Gravitational Waves competition? ',\n  '**Critical Concepts and Methods:**\\n\\n- **Dynamic Programming:** This technique is used to find the best CW parameters by iteratively refining the parameters based on the best metric score.\\n- **Ensemble Methods:** The best performing method combines the results of multiple algorithms to achieve higher accuracy.\\n- **Waveform Parameters:** The competition focuses on finding the best parameters for the CW curve, including f0, f1, alpha, and delta.\\n- **Data Augmentation:** To increase the size and diversity of the training data, the competition allows for random shifts and changes in phase of the waveform.\\n- **Random Search:** This method is used to find the best CW parameters by randomly exploring the parameter space.'),\n ('Can you explain more about Dynamic Programming and its role in fulfulling the goal of the competition?',\n  \"Sure, here's a more detailed explanation of Dynamic Programming and its role in fulfilling the goal of the G2Net Detecting Continuous Gravitational Waves competition:\\n\\nDynamic Programming is a technique used in the G2Net competition to find the best CW parameters by iteratively refining the parameters based on the best metric score. The goal of the competition is to detect continuous gravitational waves in a noisy signal, and the CW parameters are the key variables that determine the sensitivity of the signal to noise.\\n\\n**How Dynamic Programming Works:**\\n\\n1. **Initialization:** The algorithm starts by initializing the parameters of the CW curve, such as f0, f1, alpha, and delta. These parameters represent the frequency of the CW curve and the shape of the wave.\\n2. **Iteration:** The algorithm iterates over a set of data points and for each data point, it calculates the metric score, which is a measure of how well the CW curve fits the data. The metric score is used to select the next set of parameters to be used in the next iteration.\\n3. **Refinement:** The algorithm refines the parameters by updating them based on the results of the metric score calculation. The parameters that have the most significant impact on the metric score are updated more frequently.\\n4. **Convergence:** The algorithm continues to iterate over the data points and refine the parameters until the metric score reaches a minimum or a desired level of accuracy is reached.\\n\\n**Role of Dynamic Programming in the Competition:**\\n\\nDynamic Programming plays a crucial role in the G2Net competition by helping to find the best CW parameters that maximize the mean power of the corresponding part in each data. By iteratively refining the parameters, the algorithm is able to achieve high accuracy on the competition data.\\n\\nThe competition organizers used Dynamic Programming because it is a well-established and effective method for finding the best parameters in a complex optimization problem. The algorithm is also efficient, which is important for a competition with a large number of data points.\"),\n ('Can you tell me what techniques may NOT work well for the G2Net competitionn and why?',\n  'Sure, here are some techniques that may NOT work well for the G2Net competition and why:\\n\\n- **Random Search:** Random search can be inefficient for large datasets, as it can explore the same parts of the parameter space repeatedly.\\n- **Ensemble Methods:** Ensemble methods can be sensitive to overfitting, especially when the dataset is small.\\n- **Baseline Solution:** The baseline solution, which uses a simple Conv1D model with a single layer, may not be competitive due to its low accuracy.\\n- **Data Augmentation:** While data augmentation can be useful for increasing the size and diversity of the training data, it can also introduce artifacts that can bias the model.\\n- **Slow Training:** Training the model can be slow, especially on large datasets, as it can involve a lot of iterations.'),\n ('What critical concepts and methods are used in the Foursquare - Location Matching competition?',\n  '**Critical Concepts and Methods:**\\n\\n- **Candidate Matching:** The competition involves creating candidate pairs based on the location coordinates. Two methods were used for candidate matching: Euclidean distance and Cos similarity of name embeddings.\\n- **Feature Engineering:** Additional features were created based on the existing features, including character similarity features, Euclidean distance, and embedding of name with svd for dimensionality reduction.\\n- **Binary Classification:** A binary classification model was used to determine if the locations are identical or not. The kNN algorithm was used for the classification, with the optimal parameters determined through cross-validation.\\n- **Post-processing:** After the candidate matching and feature engineering, the data was post-processed to remove the pairs that would have been incorrect.\\n- **Cross Validation Strategy:** Local evaluation was done with 2 fold cross validation, and the final model was trained on all of the 2 fold data.'),\n ('Tell me more about Candidate Matching and why is it been chosen as a solution for the competition?',\n  'The candidate matching method was chosen because it achieved the best performance on the validation data among the various methods tested. The kNN algorithm was found to be the most effective method for candidate matching, with the optimal parameters determined through cross-validation.'),\n ('Explain Binary Classification and why is it chosen for this competition?',\n  \"Sure. Here's an explanation of Binary Classification and why it is chosen for this competition:\\n\\nBinary classification is a machine learning task that involves classifying data points into two categories: positive and negative. The goal is to create a model that can accurately predict the category of a new data point.\\n\\nIn this case, the data points are the candidate locations, and the two categories are locations that are the same and locations that are different. The binary classification model is used to determine if the locations are the same or not.\\n\\nThe kNN algorithm was chosen for the binary classification task because it is a simple and effective algorithm that can be easily tuned to the problem. The kNN algorithm works by finding the k most similar data points to the new data point, and then classifying the new data point based on the majority class of the k most similar data points.\\n\\nThe kNN algorithm was found to be the most effective method for binary classification on the validation data, with the optimal parameters determined through cross-validation.\"),\n ('What critical concepts and methods are used in the Google - Isolated Sign Language Recognition competition?',\n  '**Key Concepts and Methods:**\\n\\n- **Data Preprocessing:**\\n    - Feature extraction: 18 lip points, 20 pose points (including arms, shoulders, eyebrows, and nose), and all hand points.\\n    - Motion features: future and history motion.\\n    - Randomly selected distances and angles were included.\\n\\n\\n- **Transformer Model:**\\n    - EfficientNet-B0 model was used for the backbone.\\n    - DeBERTa was used as the transformer model.\\n    - Attention mechanism was modified for efficiency.\\n\\n\\n- **Augmentation:**\\n    - Various augmentations were applied to increase the size and diversity of the training data.\\n    - The model was trained on a single fold from 8 randomly split folds, as well as DeBERTa and BERT trained on the full dataset.')]"},"metadata":{}}]},{"cell_type":"markdown","source":"As demonstrated, the test results indicated that the model successfully managed to address both new questions and their follow-ups, providing not only answers but also explanations or examples for better comprehension for all answerable questions (10 out of 10). Moreover, the model acknowledged its inability to respond to questions lacking sufficient information or context, abstaining from generating non-factual answers (2 out of 2). ","metadata":{"execution":{"iopub.execute_input":"2024-04-13T09:52:39.093067Z","iopub.status.busy":"2024-04-13T09:52:39.09237Z","iopub.status.idle":"2024-04-13T09:52:39.097217Z","shell.execute_reply":"2024-04-13T09:52:39.096207Z","shell.execute_reply.started":"2024-04-13T09:52:39.093029Z"},"papermill":{"duration":0.02776,"end_time":"2024-04-13T16:38:21.028304","exception":false,"start_time":"2024-04-13T16:38:21.000544","status":"completed"},"tags":[]}},{"cell_type":"markdown","source":"# 6. Interactive Interface\n\nAn interactive interface is built to have a more chat-bot-like experience.","metadata":{"papermill":{"duration":0.027698,"end_time":"2024-04-13T16:38:21.083974","exception":false,"start_time":"2024-04-13T16:38:21.056276","status":"completed"},"tags":[]}},{"cell_type":"code","source":"def interactive_query():\n    while True:\n        query = input(\"Enter your question (or type 'quit' to exit): \")\n        print('\\n')\n        if query.lower() == 'quit':\n            print(\"Exiting...\")\n            break\n        crc_qa(query)\n        print('\\n\\n')","metadata":{"papermill":{"duration":0.036192,"end_time":"2024-04-13T16:38:21.148043","exception":false,"start_time":"2024-04-13T16:38:21.111851","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:22:54.200731Z","iopub.execute_input":"2024-04-15T04:22:54.201058Z","iopub.status.idle":"2024-04-15T04:22:54.207319Z","shell.execute_reply.started":"2024-04-15T04:22:54.201028Z","shell.execute_reply":"2024-04-15T04:22:54.206474Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"interactive_query()","metadata":{"papermill":{"duration":0.035562,"end_time":"2024-04-13T16:38:21.211907","exception":false,"start_time":"2024-04-13T16:38:21.176345","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:36:33.651903Z","iopub.execute_input":"2024-04-15T04:36:33.652905Z","iopub.status.idle":"2024-04-15T04:36:35.577049Z","shell.execute_reply.started":"2024-04-15T04:36:33.652871Z","shell.execute_reply":"2024-04-15T04:36:35.575785Z"},"trusted":true},"execution_count":43,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[43], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43minteractive_query\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","Cell \u001b[0;32mIn[39], line 3\u001b[0m, in \u001b[0;36minteractive_query\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minteractive_query\u001b[39m():\n\u001b[1;32m      2\u001b[0m     \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[0;32m----> 3\u001b[0m         query \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43minput\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mEnter your question (or type \u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mquit\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m to exit): \u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      4\u001b[0m         \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m      5\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m query\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mquit\u001b[39m\u001b[38;5;124m'\u001b[39m:\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py:1262\u001b[0m, in \u001b[0;36mKernel.raw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1260\u001b[0m     msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraw_input was called, but this frontend does not support input requests.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1261\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m StdinNotImplementedError(msg)\n\u001b[0;32m-> 1262\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_input_request\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1263\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mstr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1264\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_parent_ident\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1265\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_parent\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1266\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpassword\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m   1267\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py:1305\u001b[0m, in \u001b[0;36mKernel._input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1302\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m:\n\u001b[1;32m   1303\u001b[0m     \u001b[38;5;66;03m# re-raise KeyboardInterrupt, to truncate traceback\u001b[39;00m\n\u001b[1;32m   1304\u001b[0m     msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInterrupted by user\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1305\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m(msg) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1306\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m:\n\u001b[1;32m   1307\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlog\u001b[38;5;241m.\u001b[39mwarning(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInvalid Message:\u001b[39m\u001b[38;5;124m\"\u001b[39m, exc_info\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"],"ename":"KeyboardInterrupt","evalue":"Interrupted by user","output_type":"error"}]},{"cell_type":"code","source":"# Follow-up question 1 for the first question \nquery='Tell me more about Candidate Rerank. Why is it suitable or chosen for the competition?'\ncrc_qa(query)","metadata":{"papermill":{"duration":10.120206,"end_time":"2024-04-13T16:36:15.124165","exception":false,"start_time":"2024-04-13T16:36:05.003959","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-04-15T04:20:39.779846Z","iopub.execute_input":"2024-04-15T04:20:39.780131Z","iopub.status.idle":"2024-04-15T04:20:49.843801Z","shell.execute_reply.started":"2024-04-15T04:20:39.780106Z","shell.execute_reply":"2024-04-15T04:20:49.842780Z"}},"execution_count":18,"outputs":[{"name":"stdout","text":"Candidate Rerank is a technique that reorders the items based on their predicted ranks, with the goal of improving the ranking accuracy. It is suitable for this competition because it allows the model to focus on the most relevant items in the dataset, rather than considering all items equally. This can lead to a significant improvement in the ranking accuracy.\n----------------------------------------\nReferences:\n1. https://www.kaggle.com/c/otto-recommender-system/discussion/382802\n2. https://www.kaggle.com/c/quora-question-pairs/discussion/34288\n3. https://www.kaggle.com/c/h-and-m-personalized-fashion-recommendations/discussion/324197\n4. https://www.kaggle.com/c/google-ai-open-images-visual-relationship-track/discussion/64631\n5. https://www.kaggle.com/c/quora-question-pairs/discussion/34310\n","output_type":"stream"}]}]}